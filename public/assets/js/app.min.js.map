{"version":3,"sources":["app.js","config.js","routes.js","components/Dropdown.js","components/Loading.js","components/Logout.js","components/Menu.js","components/Metas.js","components/PageTitle.js","components/TableHeader.js","components/TableList.js","components/Tabs.js","components/Upload.js","components/ValidationErrors.js","controllers/AppController.js","controllers/DashboardController.js","directives/Confirm.js","directives/NgClose.js","directives/NgEnter.js","directives/Role.js","directives/StaticInclude.js","helpers/Cliente.js","helpers/ClienteEndereco.js","helpers/Comentario.js","helpers/InspecaoTecnica.js","helpers/Nota.js","helpers/Pedido.js","helpers/Rastreio.js","helpers/Sugestao.js","helpers/ValidationErrors.js","i18n/angular-pt_BR.js","services/Environment.js","services/Filter.js","services/Rest.js","services/ToasterInterceptor.js","components/Dashboard/CaixaSugestao.js","components/Dashboard/ChartStatusByMarketplace.js","components/Dashboard/ChartTotalOrders.js","components/Dashboard/RastreiosMonitorados.js","components/Dashboard/TotalOrdersByDate.js","controllers/Admin/IcmsController.js","controllers/Allnation/AllnationProductFormController.js","controllers/Allnation/AllnationProductListController.js","controllers/Auth/AuthController.js","controllers/Cliente/ClienteDetalheController.js","controllers/Cliente/ClienteListController.js","controllers/Faturamento/FaturamentoController.js","controllers/Faturamento/FaturamentoListController.js","controllers/Gamification/AdicionarTarefaFormController.js","controllers/Gamification/AvatarFormController.js","controllers/Gamification/PerfilController.js","controllers/Gamification/RankingController.js","controllers/Gamification/SolicitacaoListController.js","controllers/Inspecao/InspecaoFilaListController.js","controllers/Inspecao/InspecaoRealizadaListController.js","controllers/Inspecao/InspecaoSolicitadaListController.js","controllers/Inspecao/InspecaoSolicitarFormController.js","controllers/Inspecao/InspecaoSolicitarFormModalController.js","controllers/Inspecao/InspecaoTecnicaFormController.js","controllers/Marketing/TemplatemlController.js","controllers/Partials/SearchController.js","controllers/Pedido/PedidoComentarioController.js","controllers/Pedido/PedidoDetalheController.js","controllers/Pedido/PedidoListController.js","controllers/Pedido/PedidoProdutoFormController.js","controllers/Produto/ProdutoFormController.js","controllers/Produto/ProdutoListController.js","controllers/Relatorio/RelatorioPedidosController.js","controllers/Relatorio/RelatorioProdutosController.js","controllers/Relatorio/RelatorioRetiradaEstoqueController.js","controllers/Sugestao/SugestaoDetalheController.js","controllers/Sugestao/SugestaoFormController.js","controllers/Sugestao/SugestaoListController.js","controllers/Usuario/UsuarioFormController.js","controllers/Usuario/UsuarioListController.js","models/Allnation/AllnationProduct.js","models/Cliente/Cliente.js","models/Cliente/Endereco.js","models/Gamification/Conquista.js","models/Gamification/Gamification.js","models/Gamification/Recompensa.js","models/Gamification/Solicitacao.js","models/Gamification/Tarefa.js","models/Gamification/Troca.js","models/Gamification/Voto.js","models/Inspecao/InspecaoTecnica.js","models/Pedido/Comentario.js","models/Pedido/Pedido.js","models/Pedido/Rastreio.js","models/Produto/Atributo.js","models/Produto/Marca.js","models/Produto/Produto.js","models/Sugestao/Sugestao.js","models/Usuario/Senha.js","models/Usuario/Usuario.js","controllers/Cliente/Endereco/EnderecoFormController.js","controllers/Gamification/conquistas/ConquistaFormController.js","controllers/Gamification/conquistas/ConquistaListController.js","controllers/Gamification/recompensas/RecompensaFormController.js","controllers/Gamification/recompensas/RecompensaListController.js","controllers/Gamification/tarefas/TarefaFormController.js","controllers/Gamification/tarefas/TarefaListController.js","controllers/Gamification/trocas/TrocaFormController.js","controllers/Gamification/trocas/TrocaListController.js","controllers/Pedido/Rastreio/RastreioEditFormController.js","controllers/Pedido/Rastreio/RastreioImportanteListController.js","controllers/Produto/Linha/LinhaFormController.js","controllers/Produto/Linha/LinhaListController.js","controllers/Produto/Marca/MarcaFormController.js","controllers/Produto/Marca/MarcaListController.js","controllers/Usuario/Senha/MinhaSenhaController.js","controllers/Usuario/Senha/SenhaFormController.js","controllers/Usuario/Senha/SenhaListController.js","models/Pedido/PedidoProduto/PedidoProduto.js","models/Pedido/Rastreio/Devolucao.js","models/Pedido/Rastreio/Logistica.js","models/Pedido/Rastreio/Monitorado.js","models/Pedido/Rastreio/Pi.js","models/Produto/Linha/Linha.js","controllers/Pedido/Rastreio/Devolucao/DevolucaoFormController.js","controllers/Pedido/Rastreio/Devolucao/DevolucaoPendenteListController.js","controllers/Pedido/Rastreio/Logistica/LogisticaFormController.js","controllers/Pedido/Rastreio/Monitorado/RastreioMonitoradoListController.js","controllers/Pedido/Rastreio/Pi/PiFormController.js","controllers/Pedido/Rastreio/Pi/PiPendenteListController.js"],"names":["angular","module","config","envServiceProvider","domains","development","production","aws","vars","apiUrl","assetUrl","check","$authProvider","loginUrl","read","$animateProvider","classNameFilter","run","$anchorScroll","$rootScope","$state","yOffset","$on","event","toState","user","JSON","parse","localStorage","getItem","authenticated","currentUser","Raven","setUserContext","id","username","email","name","preventDefault","go","RestangularProvider","setBaseUrl","setResponseExtractor","response","data","setDefaultHeaders","Authorization","Restangular","$http","envService","toaster","setErrorInterceptor","deferred","responseHandler","status","get","headers","error","removeItem","then","tokenResponse","setItem","token","reject","pop","indexOf","msg","$httpProvider","interceptors","push","roles","block","forEach","role","_","find","$provide","decorator","taRegisterTool","taOptions","toolbar","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","component","bindings","title","size","transclude","icon","template","$auth","this","logout","controllerAs","vm","openSub","menu","items","item","subOpen","openInf","sub","sref","href","loading","loadMeta","one","customGET","metas","description","service","$localStorage","init","useFilter","pagination","hasOwnProperty","page","per_page","prev","load","next","tableData","last_page","changePerPage","reset","tableList","restrict","scope","link","element","attrs","ctrl","addClass","clone","children","replaceWith","directive","tabs","tab","clear","set","i","is","register","match","TabsHelper","replace","require","$scope","$timeout","ngDialog","Upload","resposta","statusAberto","upload","files","length","$broadcast","arquivos","success","total","retorno","open","className","NotaHelper","RastreioHelper","PedidoHelper","notaHelper","rastreioHelper","pedidoHelper","ngDialogData","ordered","key","unshift","faturar","closeThisDialog","current","reload","errors","AppController","focus","searchOpen","asset","openSearch","filter","text","String","props","out","isArray","keys","Object","itemMatches","prop","toLowerCase","toString","DashboardController","confirm","SweetAlert","controllers","on","swal","type","showCancelButton","cancelButtonText","confirmButtonColor","confirmButtonText","isConfirm","ngClose","bind","which","$apply","$eval","ngEnter","$element","$attrs","makeVisible","removeClass","makeHidden","determineVisibility","result","split","staticInclude","$templateRequest","$compile","templatePath","contents","html","$new","$parent","Cliente","changeEmail","cliente","updateVm","closePromise","value","substring","Endereco","editar","endereco","Comentario","openModal","pedido_id","Rastreio","Pedido","InspecaoTecnica","inspecoes","alterarPrioridade","pedido_produtos_id","verificarInspecoes","rastreio_id","getInspecaoData","existsSeminovos","exists","requestInspection","order_id","order","$window","$httpParamSerializer","printXML","nota_id","devolucao","auth","printDanfe","customPOST","send","parseStatusClass","parseRastreioStatusClass","cancel","pedido","redirect","marketplace","isNaN","protocolo","method","imagem","printImage","Devolucao","Pi","Logistica","pi","logistica","rastreio","printEtiqueta","printHistorico","historico","generateCode","servico","codigo","codeCopied","monitorar","loadRastreios","rastreio_status","sugestao","handle","mesages","k","j","PLURAL_CATEGORY","ZERO","ONE","TWO","FEW","MANY","OTHER","DATETIME_FORMATS","AMPMS","DAY","ERANAMES","ERAS","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","STANDALONEMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","NUMBER_FORMATS","CURRENCY_SYM","DECIMAL_SEP","GROUP_SEP","PATTERNS","gSize","lgSize","maxFrac","minFrac","minInt","negPre","negSuf","posPre","posSuf","localeID","pluralCat","n","opt_precision","provider","environment","variable","location","window","self","v","$get","operators","initializing","$watch","from","to","extend","tableHeader","parsedFilter","op","column","operator","baseUrl","getList","params","parseParams","all","stringify","create","post","update","customPUT","save","delete","remove","ToasterInterceptor","$q","responseError","rejection","factory","SugestaoHelper","sugestaoHelper","chartOrdersStatus","credits","height","options","exporting","enabled","legend","chart","plotOptions","series","stacking","allowPointSelect","yAxis","xAxis","loadTotalOrdersStatus","totalOrdersStatus","categories","marketplaces","pendente","color","pago","enviado","entregue","maior","max","chartOrders","mes","ano","tooltip","followPointer","shared","headerFormat","min","loadTotalOrders","totalOrders","Monitorado","rastreiosMonitorados","simpleList","ordersDate","loadTotalOrdersDate","totalOrdersDate","IcmsController","generateRelatorio","AllnationProductFormController","$stateParams","AllnationProduct","formData","createProduct","AllnationProductListController","Filter","TableHeader","filterList","allnation_products.category","allnation_products.brand","allnation_products.ean","fields","AuthController","login","credentials","password","ClienteDetalheController","ClienteEnderecoHelper","ClienteHelper","cliente_id","clienteEnderecoHelper","clienteHelper","detail","ClienteListController","clientes.nome","clientes.taxvat","FaturamentoController","notas","generating","mensagem","FaturamentoListController","ComentarioHelper","comentarioHelper","pedidos.codigo_marketplace","pedido_rastreios.rastreio","roundFloat","number","parseFloat","toFixed","faturamento","chaveCopiada","AdicionarTarefaFormController","Tarefa","tarefas","solicitacao","solicitar","AvatarFormController","Gamification","usuario","copy","gamification","avatar","arquivo","dataUrltoBlob","PerfilController","proprio","grafico","formatter","x","y","perfil","votos","conquistas","openAvatarForm","openTarefaForm","RankingController","Voto","dados","meses","countdown","date","Date","getMonth","getFullYear","rankInfo","ranking","list","votar","candidato_id","erro","SolicitacaoListController","Solicitacao","usuarios.name","gamification_tarefas.titulo","gamification_solicitacoes.descricao","gamification_solicitacoes.status","aprove","InspecaoFilaListController","inspecao_tecnica.created_at","produtos.titulo","fila","openForm","inspecao","InspecaoRealizadaListController","tecnico_table.name","solicitante_table.name","InspecaoSolicitadaListController","solicitadas","changePriority","priorizado","destroy","InspecaoSolicitarFormController","Produto","confirmando","acoes","produtos","quantidade","search","term","produto_sku","produto","sku","reserva","string","novo","antigo","verificarReserva","InspecaoSolicitarFormModalController","pedidoProdutos","parseInt","estado","aplicar","InspecaoTecnicaFormController","TemplatemlController","generateTemplate","console","log","SearchController","limit","noResults","prevTerm","hasMore","nSearch","prevCategories","lsCategories","pedidos","clientes","toggleCategory","category","goTo","close","checkUpdates","more","offset","$sce","phrase","RegExp","trustAsHtml","PedidoComentarioController","ValidationErrors","comentarios","validationErrors","getFromOrder","comentario","formComentario","$setPristine","PedidoDetalheController","InspecaoTecnicaHelper","PedidoProduto","hasSeminovo","inspecaoTecnicaHelper","pedidoProduto","openOrderProductForm","orderProduct","toggleHold","segurar","segurado","togglePriority","prioridade","PedidoListController","pedidos.total","pedidos.created_at","PedidoProdutoFormController","original","modificado","imei","ProdutoFormController","unidade","ativo","gerado","tabsHelper","generateSku","generate","product","notify","atributos","pivot","checkSku","ProdutoListController","produtos.estoque","RelatorioPedidosController","$location","dragControlListeners","allowDuplicates","containment","accept","sourceItemHandleScope","destSortableScope","itemScope","sortableScope","$id","groupedResult","totalResults","labels","gerar","tipo","group","relation","chave","hash","defaults","cities","label","0","1","2","3","5","b2w","cnova","mercadolivre","walmart","site","codigo_api","frete_valor","frete_metodo","pagamento_metodo","codigo_marketplace","operacao","estimated_delivery","reembolso","created_at","cliente.nome","cliente.taxvat","cliente.fone","cliente.email","endereco.rua","endereco.numero","endereco.bairro","endereco.complemento","endereco.cidade","endereco.uf","endereco.cep","produtos.estado","pedido_produtos.produto_sku","pedido_produtos.imei","pedido_produtos.quantidade","pedido_produtos.valor","cliente_enderecos.uf","cliente_enderecos.cidade","setFilters","setField","setOrder","limpar","loadCities","changeRelation","addFilter","removeFilter","index","addOrder","some","p","changeOrder","removeOrder","compact","addField","removeField","RelatorioProdutosController","titulo","estoque","pedidos.marketplace","pedidos.status","pedidos.estimated_delivery","produtos.created_at","RelatorioRetiradaEstoqueController","SugestaoDetalheController","Sugestao","Usuario","arquivar","aceitar","SugestaoFormController","pessoas","SugestaoListController","usuarios","sugestoes.created_at","loadUsuarios","UsuarioFormController","novasRoles","UsuarioListController","AllnationProductModel","Rest","rest","ClienteModel","EnderecoModel","ConquistaModel","GamificationModel","usuario_id","gamification_id","RecompensaModel","SolicitacaoModel","TarefaModel","TrocaModel","VotoModel","InspecaoTecnicaModel","getByPedidoProduto","orderProducts","ComentarioModel","PedidoModel","RastreioModel","important","refreshAll","customDELETE","AtributoModel","fromLinha","MarcaModel","ProdutoModel","SugestaoModel","SenhaModel","fromUser","UsuarioModel","EnderecoFormController","ConquistaFormController","Conquista","conquista","tempoOptions","loadTarefas","icone","ConquistaListController","gamification_conquistas.titulo","RecompensaFormController","Recompensa","recompensa","RecompensaListController","gamification_recompensas.titulo","gamification_recompensas.valor","gamification_recompensas.nivel","TarefaFormController","tarefa","TarefaListController","TrocaFormController","Troca","troca","recompensas","loadRecompensas","setRecompensa","valor","moedas","nivel","TrocaListController","gamification_trocas.valor","gamification_trocas.status","EditarController","RastreioImportanteListController","LinhaFormController","Linha","linha","removidos","opcoes","addAttribute","removeAttribute","splice","removeTag","tag","checkTag","LinhaListController","linhas.titulo","MarcaFormController","Marca","marca","MarcaListController","marcas.titulo","MinhaSenhaController","Senha","toglePassword","inputType","SenhaFormController","senha","SenhaListController","PedidoProdutoModel","pending","LogisticaModel","MonitoradoModel","PiModel","LinhaModel","DevolucaoFormController","devolucaoOriginal","DevolucaoPendenteListController","pedido_rastreio_devolucoes.codigo_devolucao","pedidos.id","LogisticaFormController","logisticaOriginal","RastreioMonitoradoListController","PiFormController","openPi","PiPendenteListController","pedido_rastreio_pis.codigo_pi"],"mappings":"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,eACA,WACA,SAAA2E,UACA,GAAAmO,kBACAC,KAAA,OACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,KAAA,OACAC,MAAA,QAEAzO,UAAAoK,MAAA,WACAsE,kBACAC,OACA,KACA,MAEAC,KACA,UACA,gBACA,cACA,eACA,eACA,cACA,UAEAC,UACA,kBACA,iBAEAC,MACA,OACA,QAEAC,eAAA,EACAC,OACA,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEAC,UACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEAC,YACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEAC,iBACA,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEAC,cACA,EACA,GAEAC,SAAA,2BACAC,SAAA,qBACAC,OAAA,6BACAC,WAAA,oBACAC,WAAA,WACAC,MAAA,iBACAC,UAAA,WACAC,UAAA,SAEAC,gBACAC,aAAA,KACAC,YAAA,IACAC,UAAA,IACAC,WAEAC,MAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,EACAC,OAAA,EACAC,OAAA,IACAC,OAAA,GACAC,OAAA,GACAC,OAAA,KAGAR,MAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,EACAC,OAAA,EACAC,OAAA,KACAC,OAAA,GACAC,OAAA,IACAC,OAAA,MAIApT,GAAA,QACAqT,SAAA,QACAC,UAAA,SAAAC,EAAAC,eACA,MAAAD,IAAA,GAAAA,GAAA,GAAA,GAAAA,EACA1C,gBAAAE,IAEAF,gBAAAM,YCvIA,WACA,YACArT,SAAAC,OAAA,aAAA0V,SAAA,aAAA,WACA3P,KAAA4P,YAAA,cACA5P,KAAApD,QACAoD,KAAA9F,OAAA,SAAAA,QACA8F,KAAApD,KAAA1C,QAEA8F,KAAAiD,IAAA,SAAA2M,aACA5P,KAAA4P,YAAAA,aAEA5P,KAAAzC,IAAA,WACA,MAAAyC,MAAA4P,aAEA5P,KAAAlF,KAAA,SAAA+U,UACA,MAAA,QAAAA,SACA7P,KAAApD,KAA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","file":"app.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano', [\n            'ui.router',\n            'satellizer',\n            'restangular',\n            'focusIt',\n            'ngBusy',\n            'toaster',\n            'ngAnimate',\n            'jcs-autoValidate',\n            'ngFileUpload',\n            'ngImgCrop',\n            'angular-loading-bar',\n            'ngDialog',\n            'mp.datePicker',\n            'ui.utils.masks',\n            'angular-clipboard',\n            'ngStorage',\n            'ngTagsInput',\n            'oitozero.ngSweetAlert',\n            '720kb.tooltips',\n            'highcharts-ng',\n            'as.sortable',\n            'ngSanitize',\n            'ui.select',\n            'ngRaven',\n            'textAngular'\n        ]);\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n\n        .config(function(envServiceProvider) {\n            envServiceProvider.config({\n                domains: {\n                    development: ['tucano.app'],\n                    production : ['192.168.2.170'],\n                    aws        : ['www.meutucano.com.br', 'meutucano.com.br']\n                },\n                vars: {\n                    development: {\n                        apiUrl   : 'http://tucano.app/api',\n                        assetUrl : 'http://tucano.app/'\n                    },\n                    production: {\n                        apiUrl   : 'http://192.168.2.170/meutucano/public/index.php/api',\n                        assetUrl : 'http://192.168.2.170/meutucano/public/'\n                    },\n                    aws: {\n                        apiUrl  : 'https://www.meutucano.com.br/index.php/api',\n                        assetUrl: 'https://meutucano.s3-sa-east-1.amazonaws.com/public/'\n                    }\n                }\n            });\n\n            envServiceProvider.check();\n        })\n\n        /**\n         * Auth config\n         */\n        .config(function($authProvider, envServiceProvider) {\n            $authProvider.loginUrl = envServiceProvider.read('apiUrl') + '/authenticate';\n        })\n\n        /**\n         * Angular animate config\n         */\n        .config(function($animateProvider) {\n            $animateProvider.classNameFilter(/^((?!(fa-spin)).)*$/);\n        })\n\n        /**\n         * Get user information before app starts\n         */\n        .run(function($anchorScroll, $rootScope, $state) {\n            $anchorScroll.yOffset = 70;\n\n            $rootScope.$on('$stateChangeStart', function(event, toState) {\n                var user = JSON.parse(localStorage.getItem('user'));\n\n                if (user) {\n                    $rootScope.authenticated = true;\n                    $rootScope.currentUser = user;\n\n                    Raven.setUserContext({\n                        id: user.id,\n                        username: user.username,\n                        email: user.email\n                    });\n\n                    if(toState.name === 'login') {\n                        event.preventDefault();\n                        $state.go('app.dashboard');\n                    }\n                } else if (!user && toState.name !== 'login') {\n                    event.preventDefault();\n                    $state.go('login');\n                }\n            });\n        })\n\n        /**\n         * REST\n         */\n        .config(function(RestangularProvider, envServiceProvider) {\n            RestangularProvider.setBaseUrl(envServiceProvider.read('apiUrl'));\n\n            RestangularProvider.setResponseExtractor(function(response) {\n                return response.data;\n            });\n\n            RestangularProvider.setDefaultHeaders({Authorization: 'Bearer '+ localStorage.getItem('satellizer_token')});\n        })\n\n        /**\n         * REST interceptor\n         */\n        .run(function(Restangular, $http, $state, envService, toaster) {\n            Restangular.setErrorInterceptor(function(response, deferred, responseHandler) {\n                if (response.status === 401) { // Atualiza token expirado\n                    $http.get(envService.read('apiUrl') + '/token', {\n                        headers: {Authorization: 'Bearer '+ localStorage.getItem('satellizer_token')}\n                    }).error(function() {\n                        localStorage.removeItem('user');\n                        $state.go('login');\n                    }).then(function(tokenResponse) {\n                        localStorage.setItem('satellizer_token', tokenResponse.data.token);\n                        $http(response.config).then(responseHandler, deferred.reject);\n                    });\n\n                    return false;\n                } else if (response.data.status == 'ValidationFail') { // Erros de Validação\n                    toaster.pop('warning', 'Erro de validação', 'Um ou mais campos não foram preenchidos corretamente.');\n                } else if ([400].indexOf(response.status) >= 0) { // Redireciona ao login caso token seja inválido\n                    localStorage.removeItem('user');\n                    $state.go('login');\n                } else if ([403].indexOf(response.status) >= 0) { // Acesso negado ao recurso\n                    toaster.pop('error', 'Acesso negado', 'Você não possui acesso para concluir essa ação, contate o administrador!');\n                } else { // Erros de API\n                    if (!response.data.msg) {\n                        toaster.pop('error', 'Erro', 'Não foi possível processar a operação, contate o administrador!');\n                    } else {\n                        toaster.pop('error', 'Erro', response.data.msg);\n                    }\n                }\n\n                return true;\n            });\n        })\n\n        /**\n         * Handle errors in http requests\n         */\n        .config(function($httpProvider) {\n            $httpProvider.interceptors.push('ToasterInterceptor');\n        })\n\n        /**\n         * Permissions to routes\n         */\n        .run(function($rootScope, $state) {\n            $rootScope.$on('$stateChangeStart', function(event, toState) {\n                if (toState.data && toState.data.roles) {\n                    var block = true;\n                    angular.forEach(toState.data.roles, function(role) {\n                        if (typeof $rootScope.currentUser !== 'undefined' && _.find($rootScope.currentUser.roles, {name: role})) {\n                            block = false;\n                        }\n                    });\n\n                    if (block) {\n                        event.preventDefault();\n                        $state.go('app.dashboard');\n                    }\n                }\n\n                return true;\n            });\n        })\n\n        /**\n         * Wysiwig editor config\n         *\n         * @param  {Array}  $provide\n         * @return {Object}\n         */\n        .config(function($provide) {\n            $provide.decorator('taOptions', ['taRegisterTool', '$delegate', function(taRegisterTool, taOptions) { // $delegate is the taOptions we are decorating\n                taOptions.toolbar = [\n                    ['h2', 'h3', 'p'],\n                    ['bold', 'italics', 'underline', 'strikeThrough', 'ul', 'ol', 'redo', 'undo', 'clear'],\n                    ['justifyLeft', 'justifyCenter', 'justifyRight', 'indent', 'outdent'],\n                    ['html', 'insertLink']\n                ];\n\n                return taOptions;\n            }]);\n        })\n    ;\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .config(function($stateProvider, $urlRouterProvider) {\n            $urlRouterProvider.otherwise('/login');\n\n            $stateProvider\n                .state('login', {\n                    url: '/login',\n                    templateUrl: 'views/login.html',\n                    controller: 'AuthController as Auth'\n                })\n\n                .state('app', {\n                    url: '/app',\n                    templateUrl: 'views/layouts/app.html',\n                    controller: 'AppController as App'\n                })\n\n                .state('app.dashboard', {\n                    url: '/dashboard',\n                    templateUrl: 'views/dashboard.html',\n                    controller: 'DashboardController as Dashboard'\n                })\n\n                /**\n                 * Rastreio\n                 */\n                .state('app.rastreios', {\n                    url: '/rastreios',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin', 'atendimento']\n                    }\n                })\n\n                .state('app.rastreios.monitorados', {\n                    url: '/monitorados',\n                    templateUrl: 'views/rastreio/monitorado/list.html',\n                    controller: 'RastreioMonitoradoListController as RastreioMonitoradoList'\n                })\n\n                .state('app.rastreios.importantes', {\n                    url: '/importantes',\n                    templateUrl: 'views/rastreio/importante/list.html',\n                    controller: 'RastreioImportanteListController as RastreioImportanteList'\n                })\n\n                .state('app.rastreios.pis', {\n                    url: '/pis',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.rastreios.pis.pendentes', {\n                    url: '/pendentes',\n                    templateUrl: 'views/rastreio/pi/pendente/list.html',\n                    controller: 'PiPendenteListController as PiPendenteList'\n                })\n\n                .state('app.rastreios.devolucoes', {\n                    url: '/devolucoes',\n                    templateUrl: 'views/rastreio/devolucao/pendente/list.html',\n                    controller: 'DevolucaoPendenteListController as DevolucaoList'\n                })\n\n                /**\n                 * Faturamento\n                 */\n                .state('app.faturamento', {\n                    url: '/faturamento',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin', 'faturamento']\n                    }\n                })\n\n                .state('app.faturamento.index', {\n                    url: '/list',\n                    templateUrl: 'views/faturamento/list.html',\n                    controller: 'FaturamentoListController as FaturamentoList'\n                })\n\n                .state('app.faturamento.notas', {\n                    url: '/notas',\n                    templateUrl: 'views/faturamento/notas.html',\n                    controller: 'FaturamentoController as Faturamento'\n                })\n\n                /**\n                 * Admin\n                 */\n                .state('app.admin', {\n                    url: '/admin',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.admin.icms', {\n                    url: '/icms',\n                    templateUrl: 'views/admin/icms.html',\n                    controller: 'IcmsController as Icms'\n                })\n\n                /**\n                 * Pedidos\n                 */\n                .state('app.pedidos', {\n                    url: '/pedidos',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin', 'gestor', 'atendimento', 'faturamento']\n                    }\n                })\n\n                .state('app.pedidos.index', {\n                    url: '/list',\n                    templateUrl: 'views/pedido/list.html',\n                    controller: 'PedidoListController as PedidoList'\n                })\n\n                .state('app.pedidos.detalhe', {\n                    url: '/{id}',\n                    templateUrl: 'views/pedido/detalhe.html',\n                    controller: 'PedidoDetalheController as PedidoDetalhe'\n                })\n\n                /**\n                 * Clientes\n                 */\n                .state('app.clientes', {\n                    url: '/clientes',\n                    templateUrl: 'views/layouts/default.html',\n                    roles: ['admin', 'gestor']\n                })\n\n                .state('app.clientes.index', {\n                    url: '/list',\n                    templateUrl: 'views/cliente/list.html',\n                    controller: 'ClienteListController as ClienteList'\n                })\n\n                .state('app.clientes.detalhe', {\n                    url: '/{id}',\n                    templateUrl: 'views/cliente/detalhe.html',\n                    controller: 'ClienteDetalheController as ClienteDetalhe'\n                })\n\n                /**\n                 * Usuários\n                 */\n                .state('app.interno', {\n                    url: '/interno',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.interno.usuarios', {\n                    url: '/usuarios',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.interno.usuarios.index', {\n                    url: '/list',\n                    templateUrl: 'views/usuario/list.html',\n                    controller: 'UsuarioListController as UsuarioList',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.interno.usuarios.senhas', {\n                    url: '/{id}/senhas',\n                    templateUrl: 'views/usuario/senha/list.html',\n                    controller: 'SenhaListController as SenhaList'\n                })\n\n                /**\n                 * Senhas\n                 */\n                .state('app.interno.senhas', {\n                    url: '/interno',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.interno.senhas.minhas', {\n                    url: '/minhas',\n                    templateUrl: 'views/usuario/senha/minhas.html',\n                    controller: 'MinhaSenhaController as MinhaSenha'\n                })\n\n                /**\n                 * Sugestões\n                 */\n                .state('app.interno.sugestoes', {\n                    url: '/sugestoes',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.interno.sugestoes.index', {\n                    url: '/list',\n                    templateUrl: 'views/sugestoes/list.html',\n                    controller: 'SugestaoListController as SugestaoList'\n                })\n\n                /**\n                 * Marketing\n                 */\n                .state('app.marketing', {\n                    url: '/marketing',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.marketing.templateml', {\n                    url: '/templateml',\n                    templateUrl: 'views/marketing/templateml.html',\n                    controller: 'TemplatemlController as Templateml'\n                })\n\n                /**\n                 * Produtos\n                 */\n                .state('app.produtos', {\n                    url: '/produtos',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin', 'gestor']\n                    }\n                })\n\n                .state('app.produtos.index', {\n                    url: '/list',\n                    templateUrl: 'views/produto/list.html',\n                    controller: 'ProdutoListController as ProdutoList',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.produtos.form', {\n                    url: '/{sku}',\n                    templateUrl: 'views/produto/form.html',\n                    controller: 'ProdutoFormController as ProdutoForm'\n                })\n\n                /**\n                 * Linhas\n                 */\n                .state('app.produtos.linhas', {\n                    url: '/linhas',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.produtos.linhas.index', {\n                    url: '/list',\n                    templateUrl: 'views/produto/linha/list.html',\n                    controller: 'LinhaListController as LinhaList',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.produtos.linhas.form', {\n                    url: '/{id}',\n                    templateUrl: 'views/produto/linha/form.html',\n                    controller: 'LinhaFormController as LinhaForm'\n                })\n\n                /**\n                 * Marcas\n                 */\n                .state('app.produtos.marcas', {\n                    url: '/marcas',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.produtos.marcas.index', {\n                    url: '/list',\n                    templateUrl: 'views/produto/marca/list.html',\n                    controller: 'MarcaListController as MarcaList',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.produtos.marcas.form', {\n                    url: '/{id}',\n                    templateUrl: 'views/produto/marca/form.html',\n                    controller: 'MarcaFormController as MarcaForm'\n                })\n\n                /**\n                 * Inspeção técnica\n                 */\n                .state('app.inspecao', {\n                    url: '/inspecao',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.inspecao.realizada', {\n                    url: '/realizada',\n                    templateUrl: 'views/inspecao/realizada/list.html',\n                    controller: 'InspecaoRealizadaListController as InspecaoRealizadaList',\n                    data: {\n                        roles: ['admin', 'tecnico']\n                    }\n                })\n\n                .state('app.inspecao.fila', {\n                    url: '/fila',\n                    templateUrl: 'views/inspecao/fila/list.html',\n                    controller: 'InspecaoFilaListController as InspecaoFilaList',\n                    data: {\n                        roles: ['admin', 'tecnico']\n                    }\n                })\n\n                .state('app.inspecao.solicitada', {\n                    url: '/solicitada',\n                    templateUrl: 'views/inspecao/solicitada/list.html',\n                    controller: 'InspecaoSolicitadaListController as InspecaoSolicitadaList',\n                    data: {\n                        roles: ['admin', 'gestor', 'tecnico', 'atendimento']\n                    }\n                })\n\n                /**\n                 * Relatórios\n                 */\n                .state('app.relatorios', {\n                    url: '/relatorios',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.relatorios.pedidos', {\n                    url: '/pedidos',\n                    templateUrl: 'views/relatorio/pedidos.html',\n                    controller: 'RelatorioPedidosController as RelatorioPedidos'\n                })\n\n                .state('app.relatorios.produtos', {\n                    url: '/produtos',\n                    templateUrl: 'views/relatorio/produtos.html',\n                    controller: 'RelatorioProdutosController as RelatorioProdutos'\n                })\n\n                .state('app.relatorios.retirada-estoque', {\n                    url: '/retirada-estoque',\n                    templateUrl: 'views/relatorio/retirada-estoque.html',\n                    controller: 'RelatorioRetiradaEstoqueController as RetiradaEstoque'\n                })\n\n                /**\n                 * Gamification\n                 */\n                .state('app.gamification', {\n                    url: '/gamification',\n                    templateUrl: 'views/layouts/default.html'\n                })\n\n                .state('app.gamification.ranking', {\n                    url: '/ranking',\n                    templateUrl: 'views/gamification/ranking.html',\n                    controller: 'RankingController as Ranking'\n                })\n\n                .state('app.gamification.tarefas', {\n                    url: '/tarefas',\n                    templateUrl: 'views/gamification/tarefas/list.html',\n                    controller: 'TarefaListController as TarefaList'\n                })\n\n                .state('app.gamification.conquistas', {\n                    url: '/conquistas',\n                    templateUrl: 'views/gamification/conquistas/list.html',\n                    controller: 'ConquistaListController as ConquistaList'\n                })\n\n                .state('app.gamification.perfil', {\n                    url: '/perfil/?{id}',\n                    templateUrl: 'views/gamification/perfil.html',\n                    controller: 'PerfilController as Perfil'\n                })\n\n                .state('app.gamification.recompensas', {\n                    url: '/recompensas',\n                    templateUrl: 'views/gamification/recompensas/list.html',\n                    controller: 'RecompensaListController as RecompensaList'\n                })\n\n                .state('app.gamification.trocas', {\n                    url: '/trocas',\n                    templateUrl: 'views/gamification/trocas/list.html',\n                    controller: 'TrocaListController as TrocaList'\n                })\n\n                .state('app.gamification.solicitacoes', {\n                    url: '/solicitacoes',\n                    templateUrl: 'views/gamification/solicitacoes/list.html',\n                    controller: 'SolicitacaoListController as SolicitacaoList'\n                })\n\n                /**\n                 * Allnation\n                 */\n                .state('app.allnation', {\n                    url: '/allnation',\n                    templateUrl: 'views/layouts/default.html',\n                    data: {\n                        roles: ['admin']\n                    }\n                })\n\n                .state('app.allnation.products', {\n                    url: '/products',\n                    templateUrl: 'views/layouts/default.html',\n                })\n\n                .state('app.allnation.products.index', {\n                    url: '/list',\n                    templateUrl: 'views/allnation/product/list.html',\n                    controller: 'AllnationProductListController as AllnationProductList'\n                })\n\n                .state('app.allnation.products.form', {\n                    url: '/{id}',\n                    templateUrl: 'views/allnation/product/form.html',\n                    controller: 'AllnationProductFormController as AllnationProductForm'\n                })\n            ;\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('dropdown', {\n            bindings: {\n                title: '@',\n                size:  '@'\n            },\n            transclude: true,\n            templateUrl: 'views/components/dropdown.html'\n        });\n\n})();","(function() {\n    'use strict'; \n\n    angular \n        .module('MeuTucano') \n        .component('loading', {\n            bindings: {\n                icon: '@'\n            },\n            templateUrl: 'views/components/loading.html'\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('logout', {\n            template: '<button ng-click=\"Logout.logout()\" class=\"logout btn-danger\"><i class=\"fa-sign-out\"></i></button>',\n            controller: function($rootScope, $auth, $state) {\n                this.logout = function() {\n                    $auth.logout().then(function() {\n                        localStorage.removeItem('user');\n                        $rootScope.authenticated = false;\n                        $rootScope.currentUser = null;\n\n                        $state.go('login');\n                    });\n                };\n            },\n            controllerAs: 'Logout'\n        });\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('menuTucano', {\n            templateUrl: 'views/components/menu.html',\n            controller: function($state) {\n                var vm = this;\n\n                /**\n                 * Open submenu\n                 *\n                 * @param menu\n                 */\n                vm.openSub = function(menu) {\n                    angular.forEach(vm.items, function(item) {\n                        if (item !== menu)\n                            item.subOpen = false;\n                    });\n\n                    menu.subOpen = !menu.subOpen;\n                };\n\n                /**\n                 * Open inferior menu\n                 *\n                 * @param menu\n                 * @param sub\n                 */\n                vm.openInf = function(menu, sub) {\n                    angular.forEach(menu.sub, function(item) {\n                        if (item !== sub)\n                            item.subOpen = false;\n                    });\n\n                    sub.subOpen = !sub.subOpen;\n                };\n\n                /**\n                 * Retrieve menu itens\n                 * @type {*[]}\n                 */\n                vm.items = [\n                    {\n                        title: 'Painel',\n                        sref: $state.href('app.dashboard'),\n                        icon: 'fa-dashboard'\n                    },\n                    {\n                        title: 'Pedidos',\n                        sref: $state.href('app.pedidos.index'),\n                        icon: 'fa-cubes',\n                        roles: ['admin', 'gestor', 'atendimento', 'faturamento']\n                    },\n                    {\n                        title: 'Faturamento',\n                        sref: $state.href('app.faturamento.index'),\n                        icon: 'fa-barcode',\n                        roles: ['admin', 'faturamento']\n                    },\n                    {\n                        title: 'Clientes',\n                        sref: $state.href('app.clientes.index'),\n                        icon: 'fa-users',\n                        roles: ['admin', 'gestor']\n                    },\n                    {\n                        title: 'Produtos',\n                        icon: 'fa-dropbox',\n                        sref: $state.href('app.produtos.index'),\n                        //sub: [\n                            // { title: 'Produtos', icon: 'fa-list', sref: $state.href('app.produtos.index') },\n                            // { title: 'Linhas', icon: 'fa-list-alt', sref: $state.href('app.produtos.linhas.index') },\n                            // { title: 'Marcas', icon: 'fa-list-alt', sref: $state.href('app.produtos.marcas.index') },\n                            // { title: 'Assistência', icon: 'fa-wrench' },\n                        //],\n                        roles: ['admin', 'gestor']\n                    },\n                    // {\n                    //     title: 'Movimentações',\n                    //     icon: 'fa-exchange',\n                    //     sub: [\n                    //         { title: 'Entrada', icon: 'fa-mail-reply' },\n                    //         { title: 'Saída', icon: 'fa-mail-forward' },\n                    //         { title: 'Defeito', icon: 'fa-chain-broken' },\n                    //         { title: 'Transportadoras', icon: 'fa-truck' },\n                    //         { title: 'Fornecedores', icon: 'fa-building' },\n                    //         { title: 'Formas de pagamento', icon: 'fa-money' },\n                    //         { title: 'Operação fiscal', icon: 'fa-percent' }\n                    //     ]\n                    // },\n                    // {\n                    //     title: 'Financeiro',\n                    //     icon: 'fa-money',\n                    //     sub: [\n                    //         { title: 'Contas a pagar/receber', icon: 'fa-credit-card' },\n                    //         { title: 'Plano de contas', icon: 'fa-list' },\n                    //     ]\n                    // },\n                    {\n                        title: 'Rastreios',\n                        icon: 'fa-truck',\n                        roles: ['admin', 'atendimento'],\n                        sub: [\n                            {\n                                title: 'Rastreios importantes',\n                                icon: 'fa-truck',\n                                sref: $state.href('app.rastreios.importantes')\n                            },\n                            {\n                                title: 'PI\\'s pendentes' ,\n                                icon: 'fa-warning',\n                                sref: $state.href('app.rastreios.pis.pendentes')\n                            },\n                            {\n                                title: 'Devoluções pendentes',\n                                icon: 'fa-undo',\n                                sref: $state.href('app.rastreios.devolucoes')\n                            },\n                            {\n                                title: 'Rastreios monitorados',\n                                icon: 'fa-video-camera ',\n                                sref: $state.href('app.rastreios.monitorados')\n                            }\n                        ]\n                    },\n                    {\n                        title: 'Relatórios',\n                        icon: 'fa-pie-chart',\n                        sub: [\n                            {\n                                title: 'Pedidos',\n                                icon: 'fa-cubes',\n                                sref: $state.href('app.relatorios.pedidos')\n                            },\n                            {\n                                title: 'Produtos',\n                                icon: 'fa-dropbox',\n                                sref: $state.href('app.relatorios.produtos')\n                            },\n                            {\n                                title: 'Retirada de estoque',\n                                icon: 'fa-cart-arrow-down',\n                                sref: $state.href('app.relatorios.retirada-estoque')\n                            },\n                            {title: 'Caixa diário', icon: 'fa-money'},\n                            {title: 'ICMS mensal', icon: 'fa-file-pdf-o', sref: $state.href('app.admin.icms')}\n                        ],\n                        roles: ['admin', 'gestor']\n                    },\n                    // {\n                    //     title: 'Configurações',\n                    //     icon: 'fa-cog',\n                    //     roles: ['admin'],\n                    // },\n                    {\n                        title: 'Marketing',\n                        icon: 'fa-bullhorn',\n                        sub: [\n                            {title: 'Template ML', icon: 'fa-clipboard', sref: $state.href('app.marketing.templateml')}\n                        ],\n                        roles: ['admin', 'marketing']\n                    },\n                    {\n                        title: 'Integrações',\n                        icon: 'fa-cogs',\n                        sub: [\n                            {\n                                title: 'Allnation',\n                                icon: 'fa-adn',\n                                sub: [\n                                    {\n                                        title: 'Produtos',\n                                        icon: 'fa-dropbox',\n                                        sref: $state.href('app.allnation.products.index')\n                                    }\n                                ]\n                            }\n                        ],\n                        roles: ['admin']\n                    },\n                    {\n                        title: 'Inspeção técnica',\n                        icon: 'fa-bug',\n                        sub: [\n                            {\n                                title: 'Inspeções Realizadas',\n                                icon: 'fa-bug',\n                                sref: $state.href('app.inspecao.realizada'),\n                                roles: ['admin', 'tecnico']\n                            },\n                            {\n                                title: 'Fila de Inspeção',\n                                icon: 'fa-cogs',\n                                sref: $state.href('app.inspecao.fila'),\n                                roles: ['admin', 'tecnico']\n                            },\n                            {\n                                title: 'Solicitar Inspeção',\n                                icon: 'fa-cogs',\n                                sref: $state.href('app.inspecao.solicitada'),\n                                roles: ['admin', 'atendimento', 'faturamento']\n                            }\n                        ]\n                    },\n                    {\n                        title: 'Interno',\n                        icon: 'fa-desktop',\n                        sub: [\n                            // {\n                            //     title: 'Dados da empresa',\n                            //     icon: 'fa-info'\n                            // },\n                            // {\n                            //     title: 'Impostos da nota',\n                            //     icon: 'fa-percent'\n                            // },\n                            {\n                                title: 'Usuários',\n                                icon: 'fa-users',\n                                sref: $state.href('app.interno.usuarios.index'),\n                                roles: ['admin']\n                            },\n                            {\n                                title: 'Minhas senhas',\n                                icon: 'fa-key',\n                                sref: $state.href('app.interno.senhas.minhas')\n                            },\n                            {\n                                title: 'Sugestões',\n                                icon: 'fa-comments-o',\n                                sref: $state.href('app.interno.sugestoes.index'),\n                                roles: ['admin']\n                            }\n                        ]\n                    },\n                    /**\n                     * Gamification\n                     */\n                    {\n                        title: 'Gamification',\n                        icon: 'fa-gamepad',\n                        sub: [\n                            {\n                                title: 'Ranking',\n                                icon: 'fa-list-ol',\n                                sref: $state.href('app.gamification.ranking'),\n                                roles: ['admin|gestor|faturamento']\n                            },\n                            {\n                                title: 'Perfil',\n                                icon: 'fa-user',\n                                sref: $state.href('app.gamification.perfil'),\n                                roles: ['admin|gestor|faturamento']\n                            },\n                            {\n                                title: 'Tarefas',\n                                icon: 'fa-trophy',\n                                sref: $state.href('app.gamification.tarefas'),\n                                roles: ['admin']\n                            },\n                            {\n                                title: 'Conquistas',\n                                icon: 'fa-heart',\n                                sref: $state.href('app.gamification.conquistas'),\n                                roles: ['admin']\n                            },\n                            {\n                                title: 'Recompensas',\n                                icon: 'fa-cubes',\n                                sref: $state.href('app.gamification.recompensas'),\n                                roles: ['admin']\n                            },\n                            {\n                                title: 'Trocas',\n                                icon: 'fa-retweet',\n                                sref: $state.href('app.gamification.trocas'),\n                                roles: ['admin']\n                            },\n                            {\n                                title: 'Solicitações',\n                                icon: 'fa-question',\n                                sref: $state.href('app.gamification.solicitacoes'),\n                                roles: ['admin']\n                            }\n                        ]\n                    }\n                ];\n            },\n            controllerAs: 'Menu'\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('metas', {\n            templateUrl: 'views/components/metas.html',\n            controller: function($rootScope, Restangular) {\n                var vm = this;\n\n                vm.data = {};\n                vm.loading = false;\n\n                vm.loadMeta = function() {\n                    vm.loading = true;\n\n                    Restangular.one('metas/atual').customGET().then(function(metas) {\n                        vm.data = metas;\n                        vm.loading = false;\n                    });\n                };\n\n                vm.loadMeta();\n            },\n            controllerAs: 'Metas'\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('pageTitle', {\n            bindings: {\n                icon: '@',\n                title: '@',\n                description: '@'\n            },\n            templateUrl: 'views/components/page-title.html'\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('tableHeader', {\n            bindings: {\n                data: '='\n            },\n            templateUrl: 'views/components/table-header.html'\n        })\n        .service('TableHeader', function($localStorage) {\n            var name, vm, pagination;\n\n            return {\n                init: function(name, vm, useFilter) {\n                    this.name = name;\n                    this.vm   = vm;\n\n                    if (!$localStorage.pagination) $localStorage.pagination = {};\n\n                    if (!$localStorage.pagination.hasOwnProperty(this.name)) {\n                        $localStorage.pagination[this.name] = {\n                            page:     1,\n                            per_page: '20'\n                        };\n                    }\n\n                    this.pagination = $localStorage.pagination[this.name];\n\n                    return this;\n                },\n\n                prev: function() {\n                    if (this.pagination.page === 1) {\n                        return false;\n                    }\n\n                    this.pagination.page--;\n                    this.vm.load();\n                },\n\n                next: function() {\n                    if (this.pagination.page === this.vm.tableData.last_page) {\n                        return false;\n                    }\n\n                    this.pagination.page++;\n                    this.vm.load();\n                },\n\n                changePerPage: function() {\n                    this.pagination.page = 1;\n                    this.vm.load();\n                },\n\n                reset: function() {\n                    this.pagination.page = 1;\n                    this.vm.load();\n                }\n            };\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .directive('tableList', tableList);\n\n    function tableList($rootScope) {\n        return {\n            restrict: 'A',\n            scope: {\n                tableList: '='\n            },\n            transclude: true,\n            link: function(scope, element, attrs, ctrl, transclude) {\n                element.addClass('table info-style');\n\n                transclude(function(clone) {\n                    element.children('#toTransclude').replaceWith(clone);\n                });\n            },\n            templateUrl: 'views/components/table-list.html'\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('TabsHelper', function() {\n            var vm = this;\n            vm.tabs = [];\n            vm.tab = null;\n\n            return {\n                clear: function() {\n                    vm.tabs = [];\n                    vm.tab = null;\n\n                    return true;\n                },\n                get: function() {\n                    return vm.tabs;\n                },\n                set: function(tab) {\n                    var tabs = this.get();\n\n                    for (var i in tabs) {\n                        if (tabs[i].name === tab || tabs[i].name === tab.name) {\n                            vm.tab = tabs[i];\n                            break;\n                        }\n                    }\n                },\n                is: function(tab) {\n                    return vm.tab.name === tab.name || vm.tab.name === tab;\n                },\n                register: function(tab) {\n                    var match = false;\n                    var tabs = this.get();\n                    for (var i in tabs) {\n                        if (tabs[i].name === tab || tabs[i].name === tab.name) {\n                            match = true;\n                            break;\n                        }\n                    }\n\n                    if (!match)\n                        vm.tabs.push(tab);\n\n                    if (!vm.tab)\n                        vm.tab = tab;\n                }\n            };\n        })\n\n        .directive('tabs', function(TabsHelper) {\n            return {\n                scope: {},\n                transclude: true,\n                replace: true,\n                restrict: 'E',\n                templateUrl: 'views/components/tabs.html',\n                controller: function() {\n                    TabsHelper.clear();\n\n                    this.get = function() {\n                        return TabsHelper.get();\n                    };\n\n                    this.set = function(tab) {\n                        TabsHelper.set(tab);\n                    };\n\n                    this.is = function(tab) {\n                        return TabsHelper.is(tab);\n                    };\n                },\n                controllerAs: 'Tabs'\n            };\n        })\n\n        .directive('tab', function(TabsHelper) {\n            return {\n                restrict: 'E',\n                scope: {\n                    name: '@',\n                    title: '@'\n                },\n                require: '^tabs',\n                template: '<div class=\"tab-item\" ng-class=\"{ \\'active\\': Tab.is() }\" ng-transclude></div>',\n                replace: true,\n                transclude: true,\n                controller: function($scope) {\n                    this.tab = { name: $scope.name, title: $scope.title };\n                    TabsHelper.register(this.tab);\n\n                    this.is = function(tab) {\n                        return TabsHelper.is(this.tab);\n                    };\n                },\n                controllerAs: 'Tab'\n            };\n        });\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('upload', {\n            templateUrl: 'views/components/upload.html',\n            controller: function($rootScope, $timeout, toaster, envService, ngDialog, Upload) {\n                var vm = this;\n\n                vm.loading = false;\n                vm.resposta = null;\n                vm.statusAberto = false;\n\n                /**\n                 * Upload notas\n                 *\n                 * @param files\n                 */\n                vm.upload = function(files) {\n                    if (files && files.length) {\n                        vm.loading = true;\n                        vm.statusAberto = true;\n                        $rootScope.$broadcast('loading');\n\n                        Upload.upload({\n                            url: envService.read('apiUrl') + '/upload',\n                            headers: {Authorization: 'Bearer '+ localStorage.getItem(\"satellizer_token\")},\n                            data: {\n                                arquivos: files\n                            }\n                        }).success(function(response) {\n                            vm.loading = false;\n                            vm.resposta = response.data;\n                            $rootScope.$broadcast('upload');\n                            $rootScope.$broadcast('stop-loading');\n                            vm.statusAberto = false;\n\n                            if (vm.resposta.total && vm.resposta.retorno.length) {\n                                ngDialog.open({\n                                    template: 'views/components/upload-feedback.html',\n                                    className: (vm.resposta.total > 1) ? 'ngdialog-theme-default ngdialog-extra-big' : 'ngdialog-theme-default',\n                                    data: {\n                                        retorno: vm.resposta.retorno,\n                                        success: vm.resposta.success,\n                                        total  : vm.resposta.total\n                                    },\n                                    controllerAs: 'NotaUpload',\n                                    controller: function($scope, $state, NotaHelper, RastreioHelper, PedidoHelper) {\n                                        var vm = this;\n\n                                        vm.notaHelper     = NotaHelper;\n                                        vm.rastreioHelper = RastreioHelper;\n                                        vm.pedidoHelper   = PedidoHelper;\n                                        vm.retorno        = $scope.ngDialogData.retorno;\n                                        vm.success        = $scope.ngDialogData.success;\n                                        vm.total          = $scope.ngDialogData.total;\n\n                                        vm.load = function() {\n                                            var ordered = [];\n                                            for (var key in vm.retorno) {\n                                                if (vm.retorno[key].error) {\n                                                    ordered.unshift(vm.retorno[key]);\n                                                } else {\n                                                    ordered.push(vm.retorno[key]);\n                                                }\n                                            }\n\n                                            vm.retorno = ordered;\n                                        };\n\n                                        vm.load();\n\n                                        vm.faturar = function(id) {\n                                            $scope.closeThisDialog(true);\n                                            vm.pedidoHelper.faturar(id);\n                                            $state.go($state.current, {}, {reload: true});\n                                        }\n                                    }\n                                })\n                            }\n                        }).error(function() {\n                            toaster.pop('error', \"Erro no upload!\", \"Erro ao enviar arquivos, tente novamente!\");\n                        });\n                    }\n                };\n            },\n            controllerAs: 'Upload'\n        });\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('validation', {\n            bindings: {\n                errors: '='\n            },\n            template:\n                '<div ng-if=\"$ctrl.errors.length\" class=\"row\">' +\n                    '<div class=\"col-md-12 m-b-10\">' +\n                        '<div class=\"alert alert-warning\">' +\n                            '<ul class=\"p-l-20 m-t-0 m-b-0\">' +\n                                '<li ng-repeat=\"error in $ctrl.errors track by $index\">{{ error }}</li>' +\n                            '</ul>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>'\n        });\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('AppController', AppController)\n        .filter('digits', function() {\n            return function(text) {\n                return String(text).replace(/[^0-9\\.]+/g,  '');\n            };\n        })\n        .filter('propsFilter', function() {\n            return function(items, props) {\n                var out = [];\n\n                if (angular.isArray(items)) {\n                    var keys = Object.keys(props);\n\n                    items.forEach(function(item) {\n                        var itemMatches = false;\n\n                        for (var i = 0; i < keys.length; i++) {\n                            var prop = keys[i];\n                            var text = props[prop].toLowerCase();\n                            if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\n                                itemMatches = true;\n                                break;\n                            }\n                        }\n\n                        if (itemMatches) {\n                            out.push(item);\n                        }\n                    });\n                } else {\n                    // Let the output be the input untouched\n                    out = items;\n                }\n\n                return out;\n            };\n        });\n\n    function AppController($rootScope, focus, envService) {\n        var vm = this;\n\n        vm.searchOpen = false;\n        vm.user = $rootScope.currentUser;\n\n        $rootScope.asset = function(assetUrl) {\n            return envService.read('assetUrl') + assetUrl;\n        };\n\n        /**\n         * Open search overlay\n         */\n        vm.openSearch = function() {\n            vm.searchOpen = true;\n            focus('searchInput');\n        };\n\n        /**\n         * Close search overlay\n         */\n        $rootScope.$on(\"closeSearch\", function(){\n            vm.searchOpen = false;\n        });\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('DashboardController', DashboardController);\n\n    function DashboardController() {\n        var vm = this;\n\n        vm.load = function() {\n        };\n\n        vm.load();\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .directive('confirm', confirm);\n\n    function confirm($rootScope, SweetAlert) {\n        return {\n            restrict: 'A',\n            scope: {\n                confirm: '&'\n            },\n            link: function(scope, element, attrs, controllers) {\n                element.on('click', function() {\n                    SweetAlert.swal({\n                        title: \"Tem certeza?\",\n                        text: \"Esta ação não poderá ser desfeita!\",\n                        type: \"warning\",\n                        showCancelButton: true,\n                        cancelButtonText: \"Não\",\n                        confirmButtonColor: \"#F55752\",\n                        confirmButtonText: \"Sim!\"\n                    }, function(isConfirm) {\n                        if (isConfirm) {\n                            scope.confirm();\n                        }\n                    });\n                });\n            }\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .directive('ngClose', ngClose);\n\n    function ngClose() {\n        return function(scope, element, attrs) {\n            element.bind(\"keydown keypress\", function(event) {\n                if(event.which === 27) {\n                    scope.$apply(function(){\n                        scope.$eval(attrs.ngClose, {'event': event});\n                    });\n\n                    event.preventDefault();\n                }\n            });\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .directive('ngEnter', ngEnter);\n\n    function ngEnter() {\n        return function(scope, element, attrs) {\n            element.bind(\"keydown keypress\", function(event) {\n                if(event.which === 13) {\n                    scope.$apply(function(){\n                        scope.$eval(attrs.ngEnter, {'event': event});\n                    });\n\n                    event.preventDefault();\n                }\n            });\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .directive('roles', roles);\n\n    function roles($rootScope) {\n        return {\n            restrict: 'A',\n            link: function linkFunc($scope, $element, $attrs) {\n                var makeVisible = function() {\n                    $element.removeClass('hidden');\n                };\n\n                var makeHidden = function() {\n                    $element.addClass('hidden');\n                };\n\n                var determineVisibility = function() {\n                    var result;\n\n                    result = false;\n                    angular.forEach(roles, function(role) {\n                        if (_.find($rootScope.currentUser.roles, {name: role})) {\n                            result = true;\n                        }\n                    });\n\n                    if (result === true) {\n                        makeVisible();\n                    } else {\n                        makeHidden();\n                    }\n                };\n\n                var roles = $attrs.roles;\n\n                if (roles.indexOf('|') >= 0)\n                    roles = roles.split('|');\n                else if (roles.length > 0)\n                    roles = [roles];\n\n                if (roles.length > 0) determineVisibility();\n            }\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .directive('staticInclude', staticInclude);\n\n    function staticInclude($templateRequest, $compile) {\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            scope: false,\n            link: function ($scope, element, attrs) {\n                var templatePath = attrs.staticInclude;\n\n                $templateRequest(templatePath)\n                    .then(function (response) {\n                        var contents = element.html(response).contents();\n                        $compile(contents)($scope.$new(false, $scope.$parent));\n                    });\n            }\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('ClienteHelper', function(ngDialog, toaster, Cliente) {\n            var vm;\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 *\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n\n                    return this;\n                },\n\n                /**\n                 * Altera o e-mail do cliente\n                 *\n                 * @param  {int} cliente\n                 * @param  {boolean} updateVm\n                 * @return {void}\n                 */\n                changeEmail: function(cliente, updateVm) {\n                    ngDialog.open({\n                        template: 'views/cliente/change_email.html',\n                        controller: function() {\n                            this.email = cliente.email;\n                        },\n                        controllerAs: 'ChangeEmail'\n                    }).closePromise.then(function(data) {\n                        if (data.value !== null && data.value.substring(0, 1) != '$') {\n                            this.vm.loading = true;\n\n                            Cliente.changeEmail(cliente.id, data.value).then(function(cliente) {\n                                toaster.pop('success', 'Sucesso!', 'E-mail alterado com sucesso!');\n                                this.vm.loading = false;\n\n                                if (typeof this.vm != 'undefined' && typeof updateVm !== 'undefined' && updateVm && typeof this.vm.load != 'undefined' ) {\n                                        this.vm.load();\n                                }\n                            }.bind(this));\n                        }\n                    }.bind(this));\n                }\n            };\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('ClienteEnderecoHelper', function(ngDialog, Endereco) {\n            var vm;\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n\n                    return this;\n                },\n\n                /**\n                 * Editar endereço\n                 * @param endereco_id\n                 */\n                editar: function(id, updateVm) {\n                    Endereco.get(id).then(function(endereco) {\n                        ngDialog.open({\n                            template: 'views/cliente/endereco/form.html',\n                            controller: 'EnderecoFormController',\n                            controllerAs: 'EnderecoForm',\n                            data: {\n                                endereco: endereco\n                            }\n                        }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined' &&\n                                data.value === true) {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                }\n            };\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('ComentarioHelper', function($state, ngDialog, SweetAlert, toaster, Comentario) {\n            var vm;\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n\n                    return this;\n                },\n\n                /**\n                 * Abre o modal de comentários do pedido\n                 *\n                 * @param  {int} pedido_id\n                 * @return {void}\n                 */\n                openModal: function(pedido_id, updateVm) {\n                    ngDialog.open({\n                        template: 'views/pedido/comentarios-modal.html',\n                        data: { pedido_id: pedido_id },\n                        controller: 'PedidoComentarioController',\n                        controllerAs: 'PedidoComentario'\n                    }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined') {\n                                this.vm.load();\n                            }\n                    }.bind(this));\n                }\n            };\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('InspecaoTecnicaHelper', function(ngDialog, toaster, Rastreio, Pedido, InspecaoTecnica) {\n            var vm;\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n                    this.vm.inspecoes = false;\n\n                    return this;\n                },\n\n                /**\n                 * Altera a prioridade da inspecao\n                 *\n                 * @param  {int} pedido_produtos_id\n                 * @param  {bool} updateVm\n                 * @return {void}\n                 */\n                alterarPrioridade: function(pedido_produtos_id, updateVm) {\n                    InspecaoTecnica.alterarPrioridade(pedido_produtos_id).then(function() {\n                        toaster.pop('success', 'Sucesso!', 'Prioridade alterada com sucesso!');\n\n                        if (typeof this.vm != 'undefined' &&\n                            typeof updateVm !== 'undefined' &&\n                            updateVm &&\n                            typeof this.vm.load != 'undefined' ) {\n                            this.vm.load();\n                        }\n                    }.bind(this));\n                },\n\n                /**\n                 * Verifica se existe inspecoes para os produtos e então retorna a qual vai associar ou criar\n                 *\n                 * @param  {int} rastreio_id\n                 * @return {Object}\n                 */\n                verificarInspecoes: function(rastreio_id) {\n                    Rastreio.getInspecaoData(rastreio_id).then(function(response) {\n                        this.vm.inspecoes = response;\n                    }.bind(this));\n                },\n\n                /**\n                 * Verifica se o algum dos produtos do pedido deste rastreio é seminovo\n                 *\n                 * @param  {int} rastreio_id\n                 * @return {Object}\n                 */\n                existsSeminovos: function(rastreio_id) {\n                    Rastreio.existsSeminovos(rastreio_id).then(function(response) {\n                        this.vm.existsSeminovos = response.exists;\n                    }.bind(this));\n                },\n\n                requestInspection: function(order_id) {\n                    Pedido.get(order_id).then(function(order) {\n                        ngDialog.open({\n                            className: 'ngdialog-theme-default ngdialog-big',\n                            template: 'views/inspecao/solicitada/form-modal.html',\n                            controller: 'InspecaoSolicitarFormModalController',\n                            controllerAs: 'InspecaoSolicitarFormModal',\n                            data: {\n                                order: order || null\n                            }\n                        }).closePromise.then(function(data) {\n                            if (typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined') {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                }\n            };\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('NotaHelper', function(ngDialog, $window, envService, $httpParamSerializer, Restangular, toaster) {\n            return {\n                /**\n                 * Generate XML\n                 * @param nota_id\n                 * @param devolucao\n                 */\n                printXML: function(nota_id, devolucao) {\n                    if (typeof devolucao != 'undefined') {\n                        devolucao = devolucao ? 1 : 0;\n                    } else {\n                        devolucao = 0;\n                    }\n\n                    var auth = {\n                        token: localStorage.getItem(\"satellizer_token\")\n                    };\n\n                    $window.open(envService.read('apiUrl') + '/notas/xml/' + nota_id + '/' + devolucao+ '?' + $httpParamSerializer(auth), 'xml');\n                },\n\n                /**\n                 * Generate DANFE\n                 * @param nota_id\n                 */\n                printDanfe: function(nota_id) {\n                    var auth = {\n                        token: localStorage.getItem(\"satellizer_token\")\n                    };\n\n                    $window.open(envService.read('apiUrl') + '/notas/danfe/' + nota_id + '?' + $httpParamSerializer(auth), 'danfe');\n                },\n\n                /**\n                 * Enviar nota por e-mail\n                 * @param rastreio\n                 */\n                email: function(nota_id) {\n                    Restangular.one('notas/email', nota_id).customPOST().then(function(response) {\n                        if (typeof response.send !== 'undefined' && response.send === true) {\n                            toaster.pop('success', 'Sucesso!', 'O e-mail foi enviado ao cliente');\n                        } else {\n                            toaster.pop('error', 'Falha!', 'Não foi possível enviar o e-mail ao cliente');\n                        }\n                    });\n                }\n            };\n        });\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('PedidoHelper', function($window, $httpParamSerializer, $state, envService, Upload, ngDialog, SweetAlert, toaster, Pedido) {\n            var vm;\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n\n                    return this;\n                },\n\n                /**\n                 * Retonar uma classe para ser utilizada nos labels\n                 *\n                 * @param  {int|string} status\n                 * @return {string}\n                 */\n                parseStatusClass: function(status) {\n                    switch (status) {\n                        case '1':\n                        case '2':\n                            return 'info';\n                        case '3':\n                            return 'success';\n                        case '4':\n                        case '5':\n                            return 'danger';\n                    }\n                },\n\n                /**\n                 * Retonar uma classe para ser utilizada nos labels\n                 *\n                 * @param  {int|string} status\n                 * @return {string}\n                 */\n                parseRastreioStatusClass: function(status) {\n                    switch (status) {\n                        case '1':\n                        case '7':\n                        case '8':\n                            return 'info';\n                        case '2':\n                            return 'warning';\n                        case '4':\n                            return 'success';\n                        case '3':\n                        case '5':\n                        case '6':\n                            return 'danger';\n                    }\n                },\n\n                /**\n                 * Fatura um pedido\n                 *\n                 * @param  {int} pedido_id\n                 * @param  {boolean} updateVm  se deve atualizar a vm após a fatura\n                 * @return {void}\n                 */\n                faturar: function(pedido_id, updateVm) {\n                    Pedido.faturar(pedido_id).then(function() {\n                        toaster.pop('success', 'Sucesso!', 'Pedido faturado com sucesso!');\n\n                        if (typeof this.vm != 'undefined' &&\n                            typeof updateVm !== 'undefined' &&\n                            updateVm &&\n                            typeof this.vm.load != 'undefined' ) {\n                            this.vm.load();\n                        }\n                    }.bind(this));\n                },\n\n                /**\n                 * Cancela o pedido, caso não for do site nem do mercado livre, pede um número de protocolo\n                 * @param  {Object} pedido\n                 * @param  {string} redirect rota a ser redirecionado após o cancelamento\n                 * @param  {boolean} updateVm se deve atualizar a vm após o cancelamento\n                 * @return {void}\n                 */\n                cancel: function(pedido, redirect, updateVm) {\n                    if (pedido.marketplace.toLowerCase() == 'site' || pedido.marketplace.toLowerCase() == 'mercadolivre') {\n                        SweetAlert.swal({\n                            title: \"Tem certeza?\",\n                            text: \"Esta ação não poderá ser desfeita!\",\n                            type: \"warning\",\n                            showCancelButton: true,\n                            cancelButtonText: \"Não\",\n                            confirmButtonColor: \"#F55752\",\n                            confirmButtonText: \"Sim!\"\n                        }, function(isConfirm) {\n                            if (isConfirm) {\n                                this.vm.loading = true;\n\n                                Pedido.status(pedido.id, {\n                                    'status': 5\n                                }).then(function(pedido) {\n                                    toaster.pop('success', 'Sucesso!', 'Pedido cancelado com sucesso!');\n                                    this.vm.loading = false;\n\n                                    if (typeof this.vm != 'undefined' && pedido) {\n                                        if (typeof redirect !== 'undefined' && redirect) {\n                                            $state.go(redirect);\n                                        } else if (typeof updateVm !== 'undefined' && updateVm && typeof this.vm.load != 'undefined' ) {\n                                            this.vm.load();\n                                        }\n                                    }\n                                }.bind(this));\n                            }\n                        }.bind(this));\n                    } else {\n                        ngDialog.open({\n                            template: 'views/pedido/form_cancelamento.html'\n                        }).closePromise.then(function(data) {\n                            data = data.value;\n                            if (!isNaN(data.protocolo) && data.protocolo !== null) {\n                                this.vm.loading = true;\n\n                                Upload.upload({\n                                    url: envService.read('apiUrl') + '/pedidos/status/' + pedido.id,\n                                    method: 'POST',\n                                    headers: { Authorization: 'Bearer '+ localStorage.getItem('satellizer_token') },\n                                    data: {\n                                        'status': 5,\n                                        'protocolo': data.protocolo,\n                                        'imagem': data.imagem\n                                    }\n                                }).then(function(pedido) {\n                                    toaster.pop('success', 'Sucesso!', 'Pedido cancelado com sucesso!');\n                                    this.vm.loading = false;\n\n                                    if (typeof this.vm != 'undefined' && pedido) {\n                                        if (typeof redirect !== 'undefined' && redirect) {\n                                            $state.go(redirect);\n                                        } else if (typeof updateVm !== 'undefined' && updateVm && typeof this.vm.load != 'undefined' ) {\n                                            this.vm.load();\n                                        }\n                                    }\n                                }.bind(this));\n                            }\n                        }.bind(this));\n                    }\n                },\n\n                /**\n                 * Mostra a imagem do cancelamenot\n                 *\n                 * @param id do pedido\n                 */\n                printImage: function(id) {\n                    var auth = { token: localStorage.getItem('satellizer_token') };\n                    $window.open(envService.read('apiUrl') + '/pedidos/cancelamento/' + id + '?' + $httpParamSerializer(auth), 'historico');\n                }\n            };\n        });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('RastreioHelper', function($window, $httpParamSerializer, envService, ngDialog, toaster, Rastreio, Devolucao, Pi, Logistica) {\n            var vm;\n\n            var codigo = {\n                servico: null,\n                rastreio: null\n            };\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n\n                    return this;\n                },\n\n                /**\n                 * Devolução\n                 * @param rastreio\n                 */\n                devolucao: function(id, updateVm) {\n                    Devolucao.get(id).then(function(devolucao) {\n                        ngDialog.open({\n                            template: 'views/rastreio/devolucao/form.html',\n                            controller: 'DevolucaoFormController',\n                            controllerAs: 'DevolucaoForm',\n                            data: {\n                                devolucao: devolucao || { rastreio_id: id }\n                            }\n                        }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined' &&\n                                data.value === true) {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                },\n\n                /**\n                 * PI\n                 * @param rastreio\n                 */\n                pi: function(id, updateVm) {\n                    Pi.get(id).then(function(pi) {\n                        ngDialog.open({\n                            template: 'views/rastreio/pi/form.html',\n                            className: 'ngdialog-theme-default ngdialog-big',\n                            controller: 'PiFormController',\n                            controllerAs: 'PiForm',\n                            data: {\n                                pi: pi || { rastreio_id: id }\n                            }\n                        }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined' &&\n                                data.value === true) {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                },\n\n                /**\n                 * Logística reversa\n                 * @param rastreio\n                 */\n                logistica: function(id, updateVm) {\n                    Logistica.get(id).then(function(logistica) {\n                        ngDialog.open({\n                            template: 'views/rastreio/logistica/form.html',\n                            className: 'ngdialog-theme-default ngdialog-big',\n                            controller: 'LogisticaFormController',\n                            controllerAs: 'Logistica',\n                            data: {\n                                logistica: logistica || { rastreio_id: id }\n                            }\n                        }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined' &&\n                                data.value === true) {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                },\n\n                /**\n                 * Editar rastreio\n                 * @param rastreio\n                 */\n                editar: function(rastreio_id, updateVm) {\n                    Rastreio.get(rastreio_id).then(function(rastreio) {\n                        ngDialog.open({\n                            template: 'views/rastreio/partials/editar.html',\n                            controller: 'EditarController',\n                            controllerAs: 'Editar',\n                            data: {\n                                rastreio: rastreio\n                            }\n                        }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined' &&\n                                data.value === true) {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));\n                },\n\n                /**\n                 * Imprime etiqueta\n                 *\n                 * @param rastreio_id\n                 */\n                printEtiqueta: function(rastreio_id) {\n                    var auth = {\n                        token: localStorage.getItem('satellizer_token')\n                    };\n\n                    $window.open(envService.read('apiUrl') + '/rastreios/etiqueta/' + rastreio_id + '?' + $httpParamSerializer(auth), 'etiqueta');\n                },\n\n                /**\n                 * Imprime histórico\n                 *\n                 * @param rastreio_id\n                 */\n                printHistorico: function(rastreio_id) {\n                    var auth = {\n                        token: localStorage.getItem('satellizer_token')\n                    };\n\n                    $window.open(envService.read('apiUrl') + '/rastreios/historico/' + rastreio_id + '?' + $httpParamSerializer(auth), 'historico');\n                },\n\n                /**\n                 * Força a geração ou regeração da imagem do rastreio\n                 *\n                 * @param  {int} rastreio_id\n                 * @param  {bool} updateVm\n                 * @return {void}\n                 */\n                imagem: function(rastreio_id, updateVm) {\n                    Rastreio.historico(rastreio_id).then(function() {\n                        if (updateVm &&\n                            typeof this.vm != 'undefined' &&\n                            typeof this.vm.load != 'undefined') {\n                            this.vm.load();\n                        }\n                    }.bind(this));\n                },\n\n                /**\n                 * Gera um código de rsastreio\n                 *\n                 * @param  {int} servico pac|sedex\n                 * @return {void}\n                 */\n                generateCode: function(servico) {\n                    if (typeof servico == 'undefined') {\n                        servico = this.codigo.servico;\n                    }\n\n                    this.codigo.rastreio = 'Gerando...';\n\n                    Rastreio.codigo(servico).then(function(response) {\n                        this.codigo.rastreio = response.codigo;\n\n                        if (response.hasOwnProperty('error')) {\n                            this.codigo.rastreio = 'Códigos esgotados!';\n                            toaster.pop('error', 'Erro', response.error);\n                        }\n\n                        if (response.hasOwnProperty('msg')) {\n                            toaster.pop('warning', 'Atenção', response.msg);\n                        }\n                    }.bind(this));\n                },\n\n                /**\n                 * Apenas notifica que o clipboard foi copiado\n                 *\n                 * @return {void}\n                 */\n                codeCopied: function() {\n                    toaster.pop('success', 'Sucesso!', 'O código foi copiado para sua área de transferência.');\n                },\n\n                /**\n                 * Monitora ou para de monitorar um rastreio\n                 *\n                 * @param  {int} rastreio_id\n                 * @param  {bool} monitorar\n                 * @param  {bool} updateVm\n                 * @return {void}\n                 */\n                monitorar: function(rastreio_id, monitorar, updateVm) {\n                    Rastreio.monitorar(rastreio_id, monitorar).then(function() {\n                        toaster.pop('success', 'Sucesso!', 'Agora você está monitorando este rastreio.');\n\n                        if (updateVm &&\n                            typeof this.vm != 'undefined') {\n                            if (typeof this.vm.loadRastreios != 'undefined') {\n                                this.vm.loadRastreios();\n                            } else if (typeof this.vm.load != 'undefined') {\n                                this.vm.load();\n                            }\n                        }\n                    }.bind(this));\n                },\n\n                /**\n                 * Retorna a classe da label para o status do rastreio\n                 *\n                 * @param  {string|int} rastreio_status\n                 * @return {string}\n                 */\n                parseStatusClass: function(rastreio_status) {\n                    switch (rastreio_status) {\n                        case '1':\n                        case '7':\n                        case '8':\n                            return 'info';\n                        case '2':\n                            return 'warning';\n                        case '4':\n                            return 'success';\n                        case '3':\n                        case '5':\n                        case '6':\n                            return 'danger';\n                    }\n                }\n            };\n        });\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('SugestaoHelper', function($window, $httpParamSerializer, envService, ngDialog, toaster, Rastreio, Devolucao, Pi, Logistica) {\n            var vm;\n\n            var codigo = {\n                servico: null,\n                rastreio: null\n            };\n\n            return {\n                /**\n                 * Retorna uma nova instância\n                 * @param  {Object} vm\n                 * @return {Object}\n                 */\n                init: function(vm) {\n                    this.vm = vm;\n\n                    return this;\n                },\n\n                /**\n                 * Devolução\n                 * @param rastreio\n                 */\n                sugestao: function(id, updateVm) {\n                    ngDialog.open({\n                        template: 'views/sugestoes/form.html',\n                        controller: 'SugestaoFormController',\n                        controllerAs: 'SugestaoForm'\n                    });\n\n                    /*Devolucao.get(id).then(function(devolucao) {\n                        ngDialog.open({\n                            template: 'views/sugestao/form.html',\n                            controller: 'DevolucaoFormController',\n                            controllerAs: 'DevolucaoForm',\n                            data: {\n                                devolucao: devolucao || { rastreio_id: id }\n                            }\n                        }).closePromise.then(function(data) {\n                            if (updateVm &&\n                                typeof this.vm != 'undefined' &&\n                                typeof this.vm.load != 'undefined' &&\n                                data.value === true) {\n                                this.vm.load();\n                            }\n                        }.bind(this));\n                    }.bind(this));*/\n                }\n            };\n        });\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('ValidationErrors', function() {\n            return {\n                /**\n                 * Pega apenas as mensagens de error\n                 *\n                 * @param  {Object} response resposta da requisicao na api\n                 * @return {Object|null}     array com as mensagens\n                 */\n                handle: function(response) {\n                    var mesages = null;\n\n                    if (response.data.status == 'ValidationFail') {\n                        mesages = [];\n\n                        for (var k in response.data) {\n                            if (k != 'status') {\n                                for (var j in response.data[k]) {\n                                    for (var i in response.data[k][j]) {\n                                        mesages.push(response.data[k][j][i]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    return mesages;\n                }\n            };\n        });\n})();\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\n    var PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\n    $provide.value(\"$locale\", {\n        \"DATETIME_FORMATS\": {\n            \"AMPMS\": [\n                \"AM\",\n                \"PM\"\n            ],\n            \"DAY\": [\n                \"domingo\",\n                \"segunda-feira\",\n                \"ter\\u00e7a-feira\",\n                \"quarta-feira\",\n                \"quinta-feira\",\n                \"sexta-feira\",\n                \"s\\u00e1bado\"\n            ],\n            \"ERANAMES\": [\n                \"Antes de Cristo\",\n                \"Ano do Senhor\"\n            ],\n            \"ERAS\": [\n                \"a.C.\",\n                \"d.C.\"\n            ],\n            \"FIRSTDAYOFWEEK\": 6,\n            \"MONTH\": [\n                \"janeiro\",\n                \"fevereiro\",\n                \"mar\\u00e7o\",\n                \"abril\",\n                \"maio\",\n                \"junho\",\n                \"julho\",\n                \"agosto\",\n                \"setembro\",\n                \"outubro\",\n                \"novembro\",\n                \"dezembro\"\n            ],\n            \"SHORTDAY\": [\n                \"dom\",\n                \"seg\",\n                \"ter\",\n                \"qua\",\n                \"qui\",\n                \"sex\",\n                \"s\\u00e1b\"\n            ],\n            \"SHORTMONTH\": [\n                \"jan\",\n                \"fev\",\n                \"mar\",\n                \"abr\",\n                \"mai\",\n                \"jun\",\n                \"jul\",\n                \"ago\",\n                \"set\",\n                \"out\",\n                \"nov\",\n                \"dez\"\n            ],\n            \"STANDALONEMONTH\": [\n                \"janeiro\",\n                \"fevereiro\",\n                \"mar\\u00e7o\",\n                \"abril\",\n                \"maio\",\n                \"junho\",\n                \"julho\",\n                \"agosto\",\n                \"setembro\",\n                \"outubro\",\n                \"novembro\",\n                \"dezembro\"\n            ],\n            \"WEEKENDRANGE\": [\n                5,\n                6\n            ],\n            \"fullDate\": \"EEEE, d 'de' MMMM 'de' y\",\n            \"longDate\": \"d 'de' MMMM 'de' y\",\n            \"medium\": \"d 'de' MMM 'de' y HH:mm:ss\",\n            \"mediumDate\": \"d 'de' MMM 'de' y\",\n            \"mediumTime\": \"HH:mm:ss\",\n            \"short\": \"dd/MM/yy HH:mm\",\n            \"shortDate\": \"dd/MM/yy\",\n            \"shortTime\": \"HH:mm\"\n        },\n        \"NUMBER_FORMATS\": {\n            \"CURRENCY_SYM\": \"R$\",\n            \"DECIMAL_SEP\": \",\",\n            \"GROUP_SEP\": \".\",\n            \"PATTERNS\": [\n                {\n                    \"gSize\": 3,\n                    \"lgSize\": 3,\n                    \"maxFrac\": 3,\n                    \"minFrac\": 0,\n                    \"minInt\": 1,\n                    \"negPre\": \"-\",\n                    \"negSuf\": \"\",\n                    \"posPre\": \"\",\n                    \"posSuf\": \"\"\n                },\n                {\n                    \"gSize\": 3,\n                    \"lgSize\": 3,\n                    \"maxFrac\": 2,\n                    \"minFrac\": 2,\n                    \"minInt\": 1,\n                    \"negPre\": \"-\\u00a4\",\n                    \"negSuf\": \"\",\n                    \"posPre\": \"\\u00a4\",\n                    \"posSuf\": \"\"\n                }\n            ]\n        },\n        \"id\": \"pt-br\",\n        \"localeID\": \"pt_BR\",\n        \"pluralCat\": function(n, opt_precision) {  if (n >= 0 && n <= 2 && n != 2) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n    });\n}]);\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .provider('envService', function () {\n            this.environment = 'development';\n            this.data = {};\n\n            this.config = function (config) {\n                this.data = config;\n            };\n\n            this.set = function (environment) {\n                this.environment = environment;\n            };\n\n            this.get = function () {\n                return this.environment;\n            };\n\n            this.read = function (variable) {\n                if (variable !== 'all') {\n                    return this.data.vars[this.get()][variable];\n                }\n\n                return this.data.vars[this.get()];\n            };\n\n            this.is = function (environment) {\n                return (environment === this.environment);\n            };\n\n            this.check = function () {\n                var location = window.location.href,\n                    self = this;\n\n                angular.forEach(this.data.domains, function (v, k) {\n                    angular.forEach(v, function (v) {\n                        if (location.match('//' + v)) {\n                            self.environment = k;\n                        }\n                    });\n                });\n            };\n\n            this.$get = function () {\n                return this;\n            };\n    });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Filter', function ($rootScope, $timeout, $localStorage) {\n            var vm, name, operators;\n\n            return {\n                init: function(name, vm, operators) {\n                    this.name      = name;\n                    this.vm        = vm;\n                    this.operators = operators;\n\n                    if (!$localStorage.filter) $localStorage.filter = {};\n\n                    if ($localStorage.filter.hasOwnProperty(this.name)) {\n                        this.vm.filter = $localStorage.filter[this.name];\n                    }\n\n                    var initializing = true;\n                    $rootScope.$watch(function() {\n                        return vm.filter;\n                    }, function() {\n                        if (initializing) {\n                            $timeout(function() { initializing = false; });\n                        } else {\n                            angular.forEach(this.vm.filter, function(value, key) {\n\n                                if (!value || value === null || value.length === 0) {\n                                    delete this.vm.filter[key];\n                                } else if (typeof value == 'object') {\n                                    if ((value.from === null && value.to === null) ||\n                                        (typeof value.to === 'undefined' && value.from === null) ||\n                                        (typeof value.from === 'undefined' && value.to === null)) {\n                                        delete this.vm.filter[key];\n                                    }\n                                }\n                            }, this);\n\n                            $localStorage.filter[this.name] = angular.extend($localStorage.filter[this.name] || {}, this.vm.filter);\n\n                            if (this.vm.hasOwnProperty('tableHeader')) {\n                                this.vm.tableHeader.pagination.page = 1;\n                            }\n\n                            this.vm.load();\n                        }\n                    }.bind(this), true);\n\n                    return this;\n                },\n\n                parse: function() {\n                    this.parsedFilter = [];\n\n                    angular.forEach(this.vm.filter, function(value, key) {\n                        var op = this.operators[key] || '=';\n\n                        this.parsedFilter.push({\n                            'column':   key,\n                            'operator': op,\n                            'value':    value\n                        });\n                    }, this);\n\n                    return this.parsedFilter;\n                },\n\n                clear: function() {\n                    this.vm.filter = {};\n                    $localStorage.filter[this.name] = {};\n                }\n            };\n    });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Rest', function (Restangular) {\n            return {\n                baseUrl:   '',\n\n                /**\n                 * Retorna uma lista do recurso\n                 * \n                 * @param  {Object} params  \n                 * @return {Array}        \n                 */\n                getList: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all(this.baseUrl + '/list').customGET(\"\", params || {});\n                }, \n\n                /**\n                 * Retorna os parâmetros manipulados\n                 * \n                 * @param  {Object} params \n                 * @return {Object}        \n                 */\n                parseParams: function(params) {\n                    if (params) {\n                        angular.forEach(['join', 'filter', 'fields', 'with'], function(value) {\n                            if (this.hasOwnProperty(value)) {\n                                this[value] = JSON.stringify(this[value]);\n                            }\n                        }, params);\n                    }\n\n                    return params;\n                },\n\n                /**\n                 * Busca um registro de recurso\n                 * \n                 * @param  {int}    id \n                 * @return {Object}    \n                 */\n                get: function(id) {\n                    return Restangular.one(this.baseUrl, id).get();\n                },\n\n                /**\n                 * Cria um novo registro do recurso\n                 * \n                 * @param  {Object} params \n                 * @return {Object}\n                 */\n                create: function(params) {\n                    return Restangular.all(this.baseUrl).post(params);\n                },\n\n                /**\n                 * Atualiza um registro do recurso\n                 * \n                 * @param  {int}    id     \n                 * @param  {Object} params \n                 * @return {Object}       \n                 */\n                update: function(id, params) {\n                    return Restangular.one(this.baseUrl, id).customPUT(params || {});\n                },\n\n                /**\n                 * Atualiza ou cria um registro do recurso\n                 * \n                 * @param  {Object} params \n                 * @param  {int} id     \n                 * @return {Object}        \n                 */\n                save: function(params, id) {\n                    if (id) {\n                        return this.update(id, params);\n                    } else {\n                        return this.create(params);\n                    }\n                },\n\n                /**\n                 * Deleta um registro do recurso\n                 * \n                 * @param  {int}    id \n                 * @return {Object}    \n                 */\n                delete: function(id) {\n                    return Restangular.one(this.baseUrl, id).remove();\n                }\n            };\n    });\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .factory('ToasterInterceptor', ToasterInterceptor);\n\n\n    function ToasterInterceptor($q, toaster) {\n        return {\n            responseError: function(rejection) {\n                if (rejection.data.hasOwnProperty('msg')) {\n                    toaster.pop('error', \"Houve um problema\", rejection.data.msg);\n                }\n                return $q.reject(rejection);\n            }\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('caixaSugestao', {\n            templateUrl: 'views/components/dashboard/caixa-sugestao.html',\n            controller: function(SugestaoHelper) {\n                var vm = this;\n\n                /**\n                 * @type {Object}\n                 */\n                vm.sugestaoHelper = SugestaoHelper.init(vm);\n            }\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('chartStatusByMarketplace', {\n            bindings: {\n                title: '@'\n            },\n            templateUrl: 'views/components/dashboard/chart-status-by-marketplace.html',\n            controller: function(Pedido) {\n                var vm = this;\n\n                vm.chartOrdersStatus = {\n                    credits: false,\n                    loading: true,\n                    size: {\n                        height: 276,\n                    },\n                    options: {\n                        exporting: { enabled: false },\n                        title: false,\n                        legend: false,\n                        chart: {\n                            type: 'bar'\n                        },\n                        plotOptions: {\n                            series: {\n                                stacking: 'normal',\n                                allowPointSelect: true\n                            }\n                        }\n                    },\n                    yAxis: {\n                        title: false\n                    },\n                    xAxis: {},\n                    series: []\n                };\n\n                vm.loadTotalOrdersStatus = function() {\n                    vm.chartOrdersStatus.loading = true;\n\n                    Pedido.totalOrdersStatus().then(function(response) {\n                        vm.chartOrdersStatus.loading = false;\n\n                        vm.chartOrdersStatus.xAxis = {\n                            categories: response.marketplaces\n                        };\n\n                        vm.chartOrdersStatus.series = [];\n\n                        /*vm.chartOrdersStatus.series.push({\n                            name: 'Cancelados',\n                            data: response.cancelado,\n                            color: '#F55753',\n                            id: 'cancelados'\n                        });*/\n\n                        vm.chartOrdersStatus.series.push({\n                            name: 'Pendentes',\n                            data: response.pendente,\n                            color: '#E6E6E6',\n                            id: 'pendentes'\n                        });\n\n                        vm.chartOrdersStatus.series.push({\n                            name: 'Pagos',\n                            data: response.pago,\n                            color: '#48B0F7',\n                            id: 'pagos'\n                        });\n\n                        vm.chartOrdersStatus.series.push({\n                            name: 'Enviados',\n                            data: response.enviado,\n                            color: '#437DA5',\n                            id: 'enviados'\n                        });\n\n                        vm.chartOrdersStatus.series.push({\n                            name: 'Entregues',\n                            data: response.entregue,\n                            color: '#10CFBD',\n                            id: 'entregues'\n                        });\n\n                        var maior = 0;\n                        var total = 0;\n                        if (typeof vm.chartOrdersStatus.series[0].data !== 'undefined') {\n                            for (var i = 0; i < vm.chartOrdersStatus.series[0].data.length; i++) {\n                                total = 0;\n\n                                for (var k in vm.chartOrdersStatus.series) {\n                                    total += vm.chartOrdersStatus.series[k].data[i];\n                                }\n\n                                if (total > maior)\n                                    maior = total;\n                            }\n                             vm.chartOrdersStatus.yAxis.max = maior;\n                        }\n\n                    });\n                };\n\n                vm.load = function() {\n                    vm.loadTotalOrdersStatus();\n                };\n\n                vm.load();\n            }\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('chartTotalOrders', {\n            bindings: {\n                title: '@'\n            },\n            templateUrl: 'views/components/dashboard/chart-total-orders.html',\n            controller: function(Pedido) {\n                var vm = this;\n\n                vm.chartOrders = {\n                    mes: null,\n                    ano: null,\n                    credits: false,\n                    loading: true,\n                    size: {\n                        height: 276,\n                    },\n                    options: {\n                        exporting: { enabled: false },\n                        tooltip: {\n                            followPointer: true,\n                            shared: true,\n                            headerFormat: '<span style=\"font-size: 10px\">Dia {point.key}</span><br/>'\n                        },\n                        title: false,\n                        legend: false,\n                    },\n                    yAxis: {\n                        title: false,\n                        min: 0\n                    },\n                    xAxis: {\n                        categories: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]\n                    },\n                    series: []\n                };\n\n                /**\n                 * Carrega os dados do gráfico por mês\n                 *\n                 * @param  {bool} clear limpar meses, manter apens o primeiro\n                 */\n                vm.loadTotalOrders = function(clear) {\n                    vm.chartOrders.loading = true;\n\n                    if (clear === true) {\n                        vm.chartOrders.mes = null;\n                        vm.chartOrders.ano = null;\n                    }\n\n                    Pedido.totalOrders(vm.chartOrders.mes, vm.chartOrders.ano).then(function(response) {\n                        if (response.mes == 1) {\n                            vm.chartOrders.mes = 12;\n                            vm.chartOrders.ano = response.ano - 1;\n                        } else {\n                            vm.chartOrders.mes = response.mes - 1;\n                            vm.chartOrders.ano = response.ano;\n                        }\n\n                        // Ajusta o tamanho máximo do gráfico\n                        if (response.data.length > vm.chartOrders.xAxis.categories.length) {\n                            for (var i = vm.chartOrders.xAxis.categories.length; i < response.data.length; i++) {\n                                vm.chartOrders.xAxis.categories.push(i + 1);\n                            }\n                        }\n\n                        vm.chartOrders.loading = false;\n\n                        if (clear === true) {\n                            vm.chartOrders.series = [];\n                            vm.chartOrders.options.legend = false;\n                        }\n\n                        vm.chartOrders.series.push({\n                            name: response.name,\n                            data: response.data\n                        });\n\n                        if (vm.chartOrders.series.length > 1) {\n                            vm.chartOrders.options.legend = {};\n                        }\n                    });\n                };\n\n                vm.load = function() {\n                    vm.loadTotalOrders();\n                };\n\n                vm.load();\n            }\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('rastreiosMonitorados', {\n            bindings: {\n                title: '@'\n            },\n            templateUrl: 'views/components/dashboard/rastreios-monitorados.html',\n            controller: function($rootScope, RastreioHelper, Monitorado, Pedido) {\n                var vm = this;\n\n                /**\n                 * @type {Object}\n                 */\n                vm.rastreioHelper = RastreioHelper.init(vm);\n\n                /**\n                 * Carrega os rastreios monitorados\n                 */\n                vm.loadRastreios = function() {\n                    vm.loading = true;\n\n                    vm.rastreiosMonitorados = {};\n\n                    Monitorado.simpleList().then(function(response) {\n                        vm.rastreiosMonitorados = response;\n                        vm.loading = false;\n                    });\n                };\n\n                vm.load = function() {\n                    var role = 'atendimento';\n                    angular.forEach($rootScope.currentUser.roles, function(role) {\n                        if (role.name == role) {\n                            vm.loadRastreios();\n                        }\n                    });\n                };\n\n                vm.load();\n            }\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .component('totalOrdersByDate', {\n            bindings: {\n                title: '@'\n            },\n            templateUrl: 'views/components/dashboard/total-orders-by-date.html',\n            controller: function(Pedido) {\n                var vm = this;\n\n                vm.ordersDate = {};\n\n                vm.loadTotalOrdersDate = function() {\n                    vm.ordersDate = {};\n\n                    Pedido.totalOrdersDate().then(function(response) {\n                        vm.ordersDate = response;\n                    });\n                };\n\n                vm.load = function() {\n                    vm.loadTotalOrdersDate();\n                };\n\n                vm.load();\n            }\n        });\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('IcmsController', IcmsController);\n\n    function IcmsController($rootScope, Restangular, envService, $window, $httpParamSerializer) {\n        var vm = this;\n\n        /**\n         * Gera relatório\n         */\n        vm.generateRelatorio = function() {\n            var auth = {\n                token: localStorage.getItem(\"satellizer_token\")\n            };\n\n            $window.open(envService.read('apiUrl') + '/relatorios/icms?' + $httpParamSerializer(auth));\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('AllnationProductFormController', AllnationProductFormController);\n\n    function AllnationProductFormController($stateParams, AllnationProduct, toaster, $state) {\n        var vm = this;\n\n        vm.load = function() {\n            vm.loading = true;\n\n            AllnationProduct.get($stateParams.id).then(function(formData) {\n                vm.formData = formData;\n                vm.loading  = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Salva o produto\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            AllnationProduct.createProduct(vm.formData).then(function(response) {\n                toaster.pop('success', 'Produto cadastrado', 'O produto foi cadastrado no Tucano e no Magento');\n                $state.go('app.allnation.products.index');\n            });\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('AllnationProductListController', AllnationProductListController);\n\n    function AllnationProductListController(Filter, TableHeader, AllnationProduct) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('allnation_products', vm, {\n            'allnation_products.category': 'LIKE',\n            'allnation_products.brand': 'LIKE',\n            'allnation_products.ean': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('allnation_products', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            AllnationProduct.getList({\n                fields:   ['allnation_products.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n\n        vm.load();\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('AuthController', AuthController);\n\n    function AuthController($auth, $http, $state, $rootScope, focus, envService) {\n        var vm = this;\n\n        vm.username = localStorage.getItem('lastUser');\n        if (vm.username) {\n            focus('password');\n        } else {\n            focus('username');\n        }\n\n        /**\n         * Login\n         */\n        vm.login = function() {\n            vm.loading = true;\n\n            localStorage.setItem('lastUser', vm.username);\n            var credentials = {\n                username: vm.username,\n                password: vm.password\n            };\n\n            $auth.login(credentials).then(function() {\n                return $http.get(envService.read('apiUrl') + '/authenticate/user');\n            }).then(function(response) {\n                vm.loading = false;\n                var user = JSON.stringify(response.data.user);\n\n                localStorage.setItem('user', user);\n                $rootScope.authenticated = true;\n\n                $rootScope.currentUser = response.data.user;\n                $state.go('app.dashboard');\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('ClienteDetalheController', ClienteDetalheController);\n\n    function ClienteDetalheController($stateParams, Cliente, ClienteEnderecoHelper, ClienteHelper) {\n        var vm = this;\n\n        vm.cliente_id = $stateParams.id;\n        vm.cliente    = {};\n        vm.loading    = false;\n\n        /**\n         * @type {Object}\n         */\n        vm.clienteEnderecoHelper = ClienteEnderecoHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.clienteHelper = ClienteHelper.init(vm);\n\n        vm.load = function() {\n            vm.cliente = {};\n            vm.loading = true;\n\n            Cliente.detail(vm.cliente_id).then(function(cliente) {\n                vm.cliente = cliente;\n                vm.loading = false;\n            });\n        };\n\n        vm.load();\n\n        /**\n         * Retorna a classe de status do pedido\n         *\n         * @return {string}\n         */\n        vm.parseStatusClass = function(pedido) {\n            switch (pedido.status) {\n                case '1':\n                case '2':\n                    return 'info';\n                case '3':\n                    return 'success';\n                case '4':\n                case '5':\n                    return 'danger';\n            }\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('ClienteListController', ClienteListController);\n\n    function ClienteListController(Cliente, Filter, TableHeader) {\n        var vm = this; \n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('clientes', vm, {\n            'clientes.nome':       'LIKE',\n            'clientes.taxvat':     'LIKE'\n        });\n \n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader} \n         */\n        vm.tableHeader = TableHeader.init('clientes', vm);\n\n        vm.load = function() {\n            vm.loading = true; \n \n            Cliente.getList({\n                fields:   ['clientes.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false; \n            });\n        };\n        vm.load();\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('FaturamentoController', FaturamentoController);\n\n    function FaturamentoController($rootScope, Restangular, toaster) {\n        var vm = this;\n\n        vm.notas = [];\n        vm.codigo = {\n            servico: '0'\n        };\n        vm.loading = false;\n        vm.generating = false;\n\n        $rootScope.$on('upload', function() {\n            vm.load();\n        });\n\n        $rootScope.$on('loading', function() {\n            vm.loading = true;\n        });\n\n        $rootScope.$on('stop-loading', function() {\n            vm.loading = false;\n        });\n\n        /**\n         * Load notas\n         */\n        vm.load = function() {\n            vm.notas = [];\n            vm.loading = true;\n\n            Restangular.all('notas/faturamento').getList().then(function(notas) {\n                vm.notas = notas;\n                vm.loading = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Generate rastreio\n         */\n        vm.generateCode = function() {\n            vm.codigo.rastreio = 'Gerando...';\n\n            Restangular.one(\"codigos/gerar\", vm.codigo.servico).customGET().then(function(response) {\n                vm.codigo.rastreio = response.codigo;\n\n                if (response.hasOwnProperty('error')) {\n                    vm.codigo.rastreio = 'Códigos esgotados!'; \n                    toaster.pop('error', 'Erro', response.error);\n                }\n\n                if (response.hasOwnProperty('msg')) {\n                    toaster.pop('warning', 'Atenção', response.msg);\n                }\n                vm.codigo.mensagem = response.msg;\n            });\n        };\n\n        /**\n         * Faturar pedido\n         */\n        vm.faturar = function(pedido_id) {\n            Restangular.one(\"notas/faturar\", pedido_id).customGET().then(function(response) {\n                toaster.pop('success', 'Sucesso!', 'Pedido faturado com sucesso!');\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('FaturamentoListController', FaturamentoListController);\n\n    function FaturamentoListController(toaster, Filter, Pedido, TableHeader, RastreioHelper, NotaHelper, PedidoHelper, ComentarioHelper, $rootScope) {\n        var vm = this;\n\n        vm.tableData = [];\n\n        /**\n         * @type {Object}\n         */\n        vm.notaHelper = NotaHelper;\n\n        /**\n         * @type {Object}\n         */\n        vm.rastreioHelper = RastreioHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.pedidoHelper = PedidoHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.comentarioHelper = ComentarioHelper.init(vm);\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('faturamento', vm, {\n            'pedidos.codigo_marketplace': 'LIKE',\n            'clientes.nome':              'LIKE',\n            'pedido_rastreios.rastreio':  'LIKE'\n        });\n\n        vm.roundFloat = function(number) {\n            return parseFloat(parseFloat(number).toFixed(2));\n        }\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('faturamento', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            var parsedFilter = vm.filterList.parse();\n            for (var k in parsedFilter) {\n                if (parsedFilter[k].value.indexOf(',') >= 0) {\n                    parsedFilter[k].value = parsedFilter[k].value.split(',');\n                    parsedFilter[k].operator = 'IN';\n                }\n            }\n\n            Pedido.faturamento({\n                filter:   parsedFilter,\n                fields:   ['pedidos.*'],\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n\n        vm.load();\n\n        $rootScope.$on('upload', function() {\n            vm.load();\n        });\n\n        /**\n         * Avisa que a chave foi copiada\n         * @return {void}\n         */\n        vm.chaveCopiada = function() {\n            toaster.pop('info', '', 'A chave da nota foi copiada para sua área de transferência!');\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('AdicionarTarefaFormController', AdicionarTarefaFormController);\n\n    function AdicionarTarefaFormController($scope, toaster, Tarefa) {\n        var vm = this;\n\n        vm.tarefas = {};\n        vm.solicitacao = {};\n\n        vm.load = function() {\n            Tarefa.getList().then(function(response) {\n                vm.tarefas = response.data;\n            });\n        };\n\n        vm.load();\n\n        vm.save = function() {\n            Tarefa.solicitar(vm.solicitacao).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Tarefa solicitada com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('AvatarFormController', AvatarFormController);\n\n    function AvatarFormController($scope, toaster, envService, Upload, Gamification) {\n        var vm = this;\n\n        if (typeof $scope.ngDialogData.usuario != 'undefined') {\n            vm.usuario = angular.copy($scope.ngDialogData.usuario);\n        } else {\n            toaster.pop('error', 'Erro!', 'Não foi possível encontrar seu avatar!');\n            $scope.closeThisDialog(true);\n        }\n\n        vm.imagem = null;\n\n        /**\n         * Salva a jogador\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            if (vm.usuario.gamification.avatar) {\n                if (vm.imagem) {\n                    Upload.upload({\n                        url: envService.read('apiUrl') + '/gamification/upload',\n                        headers: { Authorization: 'Bearer '+ localStorage.getItem('satellizer_token') },\n                        data: {\n                            arquivo: Upload.dataUrltoBlob(vm.usuario.gamification.avatar, vm.imagem.name)\n                        }\n                    }).success(function(response) {\n                        toaster.pop('success', 'Upload concluído', response.data.msg);\n                        vm.usuario.gamification.avatar = response.data;\n\n                        Gamification.avatar(vm.usuario.gamification.id, vm.usuario.gamification.avatar).then(function() {\n                            toaster.pop('success', 'Sucesso!', 'Avatar salvo com sucesso!');\n                            $scope.closeThisDialog(true);\n                        });\n                    }).error(function () {\n                        toaster.pop('error', \"Erro no upload!\", \"Erro ao enviar arquivos, tente novamente!\");\n                    });\n                }\n            } else {\n                toaster.pop('error', \"Erro no upload!\", \"Tem certeza que você selecionou uma imagem?\");\n            }\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PerfilController', PerfilController);\n\n    function PerfilController($stateParams, ngDialog, Gamification) {\n        var vm = this;\n\n        if (typeof $stateParams.id !== 'undefined') {\n            vm.usuario = {\n                id: $stateParams.id\n            };\n            vm.proprio = false;\n        } else {\n            vm.usuario = {};\n            vm.proprio = true;\n        }\n\n        vm.grafico = {\n            credits: false,\n            loading: true,\n            size: {\n                height: 254,\n            },\n            options: {\n                exporting: { enabled: false },\n                tooltip: {\n                    followPointer: true,\n                    formatter: function () {\n                        return 'Dia ' + this.x + ': <b>' + this.y + '</b> tarefas';\n                    }\n                },\n                chart: {\n                    type: 'areaspline'\n                },\n                title: false,\n                legend: false,\n            },\n            yAxis: {\n                title: {\n                    text: 'Tarefas'\n                },\n                min: 0\n            },\n            xAxis: {\n                categories: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]\n            },\n            series: []\n        };\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Gamification.perfil(vm.usuario.id || null).then(function(response) {\n                vm.votos = response.votos;\n                vm.conquistas = response.conquistas;\n                vm.usuario = response.usuario;\n                vm.grafico.series.push({\n                    name: 'Tarefas',\n                    data: response.grafico\n                });\n\n                vm.grafico.loading = false;\n                vm.loading = false;\n            });\n        };\n\n        vm.load();\n\n        vm.openAvatarForm = function(usuario) {\n            ngDialog.open({\n                template: 'views/gamification/avatar.html',\n                controller: 'AvatarFormController',\n                controllerAs: 'AvatarForm',\n                data: {\n                    usuario: usuario || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n\n        vm.openTarefaForm = function(usuario) {\n            ngDialog.open({\n                template: 'views/gamification/form-tarefa.html',\n                controller: 'AdicionarTarefaFormController',\n                controllerAs: 'AdicionarTarefaForm',\n                data: {\n                    usuario: usuario || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RankingController', RankingController);\n\n    function RankingController(toaster, Gamification, Voto) {\n        var vm = this;\n\n        vm.dados = {};\n        vm.meses = {};\n        vm.countdown = {};\n\n        var date = new Date();\n        vm.mes = (date.getMonth() + 1) + '-' + date.getFullYear();\n\n        vm.load = function(rankInfo) {\n            if (typeof rankInfo == 'undefined') {\n                rankInfo = false;\n            }\n\n            Gamification.ranking(vm.mes).then(function(response) {\n                vm.dados = response;\n            });\n\n            if (rankInfo) {\n                Gamification.rankInfo().then(function(response) {\n                    vm.meses = response.list;\n                    vm.countdown = response.countdown;\n                });\n            }\n        };\n\n        vm.load(true);\n\n        vm.votar = function(candidato_id) {\n            Voto.save({\n                'candidato_id': candidato_id\n            }).then(function(response) {\n                if (typeof response.erro !== 'undefined') {\n                    toaster.pop('error', 'Erro!', response.erro);\n                } else {\n                    toaster.pop('success', 'Voto confirmado!', '');\n                    vm.load();\n                }\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SolicitacaoListController', SolicitacaoListController);\n\n    function SolicitacaoListController(toaster, Filter, TableHeader, Solicitacao) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('gamification_solicitacoes', vm, {\n            'usuarios.name': 'LIKE',\n            'gamification_tarefas.titulo': 'LIKE',\n            'gamification_solicitacoes.descricao': 'LIKE',\n            'gamification_solicitacoes.status': '='\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('gamification_solicitacoes', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Solicitacao.getList({\n                fields:   ['gamification_solicitacoes.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        vm.aprove = function(solicitacao) {\n            solicitacao.status = '1';\n\n            Solicitacao.save(solicitacao, solicitacao.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Solicitação aprovada com sucesso!');\n                vm.load();\n            });\n        };\n\n        vm.reject = function(solicitacao) {\n            solicitacao.status = '0';\n\n            Solicitacao.save(solicitacao, solicitacao.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Solicitação aprovada com sucesso!');\n                vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('InspecaoFilaListController', InspecaoFilaListController);\n\n    function InspecaoFilaListController(InspecaoTecnica, Filter, TableHeader, ngDialog) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('inspecao_tecnica_fila', vm, {\n            'inspecao_tecnica.created_at': 'BETWEEN',\n            'pedidos.codigo_marketplace': 'LIKE',\n            'usuarios.name': 'LIKE',\n            'produtos.titulo': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('inspecao_tecnica_fila', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            InspecaoTecnica.fila({\n                fields:   ['inspecao_tecnica.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário da amrca\n         *\n         * @return {void}\n         */\n        vm.openForm = function(inspecao) {\n            ngDialog.open({\n                template: 'views/inspecao/form.html',\n                controller: 'InspecaoTecnicaFormController',\n                controllerAs: 'InspecaoTecnicaForm',\n                data: {\n                    inspecao: inspecao || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('InspecaoRealizadaListController', InspecaoRealizadaListController);\n\n    function InspecaoRealizadaListController(InspecaoTecnica, Filter, TableHeader, ngDialog) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('inspecao_tecnica_realizada', vm, {\n            'inspecao_tecnica.created_at': 'BETWEEN',\n            'pedidos.codigo_marketplace': 'LIKE',\n            'produtos.titulo': 'LIKE',\n            'tecnico_table.name': 'LIKE',\n            'solicitante_table.name': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('inspecao_tecnica_realizada', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            InspecaoTecnica.getList({\n                fields:   ['inspecao_tecnica.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário da amrca\n         *\n         * @return {void}\n         */\n        vm.openForm = function(inspecao) {\n            ngDialog.open({\n                template: 'views/inspecao/form.html',\n                controller: 'InspecaoTecnicaFormController',\n                controllerAs: 'InspecaoTecnicaForm',\n                data: {\n                    inspecao: inspecao || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('InspecaoSolicitadaListController', InspecaoSolicitadaListController);\n\n    function InspecaoSolicitadaListController(toaster, ngDialog, Filter, TableHeader, InspecaoTecnica) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('inspecao_tecnica_solicitada', vm, {\n            'inspecao_tecnica.created_at': 'BETWEEN',\n            'pedidos.codigo_marketplace': 'LIKE',\n            'produtos.titulo': 'LIKE',\n            'tecnico_table.name': 'LIKE',\n            'solicitante_table.name': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('inspecao_tecnica_solicitada', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            InspecaoTecnica.solicitadas({\n                fields: ['inspecao_tecnica.*'],\n                filter: vm.filterList.parse(),\n                page: vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário\n         *\n         * @return {void}\n         */\n        vm.openForm = function(inspecao) {\n            ngDialog.open({\n                template: 'views/inspecao/solicitada/form.html',\n                controller: 'InspecaoSolicitarFormController',\n                controllerAs: 'InspecaoSolicitarForm'\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n\n        /**\n         * Altera a prioridade da inspecao\n         *\n         * @return {void}\n         */\n        vm.changePriority = function(inspecao) {\n            inspecao.priorizado = !inspecao.priorizado;\n            InspecaoTecnica.save(inspecao, inspecao.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Prioridade alterada com sucesso!');\n                vm.load();\n            });\n        };\n\n        /**\n         * Exclui a inspecao\n         *\n         * @return {void}\n         */\n        vm.destroy = function(inspecao) {\n            InspecaoTecnica.delete(inspecao.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Inspeção técnica excluida com sucesso!');\n                vm.load();\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('InspecaoSolicitarFormController', InspecaoSolicitarFormController);\n\n    function InspecaoSolicitarFormController($scope, toaster, SweetAlert, InspecaoTecnica, Produto) {\n        var vm = this;\n\n        vm.confirmando = false;\n        vm.acoes = {};\n        vm.produtos = [];\n        vm.solicitacao = {\n            quantidade: 1\n        };\n\n        vm.search = function(term) {\n            if (term) {\n                Produto.search(term, 1).then(function(response) {\n                    vm.produtos = response;\n                });\n            }\n        };\n\n        /**\n         * Salva a solicitacao\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            if (!vm.confirmando) {\n                if (typeof vm.solicitacao.produto !== 'undefined') {\n                    InspecaoTecnica.verificarReserva({\n                        produto: vm.solicitacao.produto.sku,\n                        quantidade: vm.solicitacao.quantidade\n                    }).then(function(response) {\n                        vm.acoes = response;\n                        vm.confirmando = true;\n                    });\n                }\n            } else if (vm.acoes) {\n                vm.acoes.produto_sku = vm.solicitacao.produto.sku;\n                InspecaoTecnica.reserva(vm.acoes).then(function(response) {\n                    $scope.closeThisDialog(true);\n\n                    if (response.dados.length) {\n                        var dados = response.dados;\n                        var string = '';\n\n                        for (var i in dados) {\n                            if (dados[i].novo != false) {\n                                string += 'A inspeção ' + dados[i].antigo + ' foi ocupada e agora substituida por ' + dados[i].novo + '.</br>';\n                            } else {\n                                string += 'A inspeção ' + dados[i].antigo + ' foi ocupada. Uma nova foi adicionada à fila.</br>';\n                            }\n                        }\n\n                        SweetAlert.swal({\n                            title: 'Atenção!',\n                            text: string,\n                            html: true,\n                            type: 'warning'\n                        });\n                    } else {\n                        toaster.pop('success', 'Sucesso!', 'Sua solitação foi feita com sucesso!');\n                    }\n                });\n            }\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('InspecaoSolicitarFormModalController', InspecaoSolicitarFormModalController);\n\n    function InspecaoSolicitarFormModalController($scope, InspecaoTecnica) {\n        var vm = this;\n\n        vm.order = $scope.ngDialogData.order;\n        vm.pedidoProdutos = [];\n        vm.inspecoes = [];\n\n        vm.load = function() {\n            for (var key in vm.order.produtos) {\n                if (parseInt(vm.order.produtos[key].produto.estado) === 1) {\n                    vm.order.produtos[key].solicitacao = {\n                        aplicar: true,\n                        quantidade: vm.order.produtos[key].quantidade,\n                        max: vm.order.produtos[key].quantidade\n                    };\n                    vm.pedidoProdutos.push(vm.order.produtos[key]);\n                }\n            }\n        };\n\n        vm.load();\n\n        vm.solicitar = function() {\n            var solicitacao = [];\n\n            for (var key in vm.pedidoProdutos) {\n                if (vm.pedidoProdutos[key].solicitacao.aplicar) {\n                    solicitacao.push({\n                        pedido_produtos_id: vm.pedidoProdutos[key].id,\n                        quantidade: vm.pedidoProdutos[key].solicitacao.quantidade\n                    });\n                }\n            }\n\n            InspecaoTecnica.solicitar(solicitacao).then(function(data) {\n                vm.inspecoes = data;\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('InspecaoTecnicaFormController', InspecaoTecnicaFormController);\n\n    function InspecaoTecnicaFormController($rootScope, $scope, $state, $stateParams, InspecaoTecnica, Produto, toaster) {\n        var vm = this;\n\n       vm.produtos = [];\n\n        if (typeof $scope.ngDialogData.inspecao != 'undefined') {\n            vm.inspecao = angular.copy($scope.ngDialogData.inspecao);\n        } else {\n            vm.inspecao = {};\n        }\n\n        vm.load = function() {\n            vm.loading = true;\n\n            InspecaoTecnica.get(vm.inspecao.id).then(function(inspecao) {\n                vm.inspecao = inspecao;\n\n                if (typeof vm.inspecao.produto !== 'undefined' && vm.inspecao.produto) {\n                    vm.produtos = [ vm.inspecao.produto ];\n                }\n\n                vm.loading = false;\n            });\n        };\n\n        if (vm.inspecao.id) {\n            vm.load();\n        }\n\n        vm.search = function(term) {\n            if (term) {\n                Produto.search(term, 1).then(function(response) {\n                    vm.produtos = response;\n                });\n            }\n        };\n\n        /**\n         * Salva a inspecao\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            if (typeof vm.inspecao.produto !== 'undefined') {\n                vm.inspecao.produto_sku = vm.inspecao.produto.sku;\n            }\n\n            InspecaoTecnica.save(vm.inspecao, vm.inspecao.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Inspeção técnica salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n\n        /**\n         * Exclui a inspecao\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            InspecaoTecnica.delete(vm.inspecao.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Inspeção técnica excluida com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('TemplatemlController', TemplatemlController);\n\n    function TemplatemlController(Restangular) {\n        var vm = this;\n\n        /**\n         * Generate template\n         */\n        vm.generateTemplate = function() {\n            console.log(vm.url);\n\n            Restangular.one(\"templateml/gerar\").customGET(\"\", {\n              url: vm.url\n            }).then(function(response) {\n                vm.template = response.template;\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SearchController', SearchController)\n        .filter('highlight', function($sce) {\n            return function(text, phrase) {\n                if (phrase) text = String(text).replace(new RegExp('('+phrase+')', 'gi'),\n                    '<span class=\"underline\">$1</span>');\n\n                return $sce.trustAsHtml(text);\n            };\n        });\n\n    function SearchController($rootScope, $state, Restangular, PedidoHelper, ComentarioHelper) {\n        var vm    = this;\n        var limit = 9;\n\n        /**\n         * @type {Object}\n         */\n        vm.comentarioHelper = ComentarioHelper;\n\n        /**\n         * @type {Object}\n         */\n        vm.pedidoHelper = PedidoHelper;\n\n        vm.noResults      = false;\n        vm.term           = null;\n        vm.prevTerm       = null;\n        vm.loading        = false;\n        vm.hasMore        = false;\n        vm.nSearch        = 0;\n        vm.categories     = {};\n        vm.prevCategories = {};\n        vm.data           = {};\n\n        vm.load = function() {\n            var lsCategories = localStorage.getItem('search.categories');\n            vm.categories = (lsCategories) ? JSON.parse(lsCategories) : {\n                pedidos : true,\n                clientes: false,\n                produtos: false\n            };\n            vm.prevCategories = vm.categories;\n\n            vm.data = {\n                pedidos  : [],\n                produtos : [],\n                clientes : []\n            };\n        }\n\n        vm.load();\n\n        /**\n         * Ativa/desativa categorias\n         * @param  {string} category\n         * @return {void}\n         */\n        vm.toggleCategory = function(category) {\n            vm.categories[category] = ! vm.categories[category];\n\n            if (vm.categories.pedidos || vm.categories.clientes || vm.categories.produtos) {\n                vm.search();\n            }\n        }\n\n        /**\n         * Vai até a rota e fecha a busca\n         *\n         * @param  {string} to\n         * @param  {Object} params\n         * @return {void}\n         */\n        vm.goTo = function(to, params) {\n            vm.close();\n            $state.go(to, params);\n        };\n\n        /**\n         * Checa se os parametros foram atualizados\n         * @return {void}\n         */\n        vm.checkUpdates = function() {\n            if (vm.term !== vm.prevTerm) {\n                vm.nSearch = 0;\n            }\n            vm.prevTerm = vm.term;\n\n            if (vm.categories !== vm.prevCategories) {\n                vm.nSearch = 0;\n            }\n            vm.prevCategories = vm.categories;\n        };\n\n        /**\n         * Organiza os parametros e faz a Busca\n         * @param  {bool} more\n         * @return {void}\n         */\n        vm.search = function(more) {\n            if (!vm.categories.pedidos && !vm.categories.clientes && !vm.categories.produtos) {\n                return;\n            }\n\n            more = (typeof more === 'undefined' || !more) ? false : true;\n\n            if (typeof vm.term !== 'undefined' && vm.term && vm.term.length > 2) {\n                if (!more) {\n                    vm.noResults = false;\n                    vm.loading   = true;\n                    vm.data      = {\n                        pedidos  : [],\n                        produtos : [],\n                        clientes : []\n                    };\n                }\n\n                localStorage.setItem('search.categories', JSON.stringify(vm.categories));\n                var categories = '';\n                for (var key in vm.categories) {\n                    if (vm.categories[key]) {\n                        categories += key + ',';\n                    }\n                }\n\n                vm.checkUpdates();\n\n                Restangular.one('search').get({\n                    categories: categories,\n                    term      : vm.term,\n                    offset    : vm.nSearch * limit\n                 }).then(function(data) {\n                    vm.loading = false;\n                    vm.hasMore = true;\n\n                    for (var key in data.pedidos) {\n                        vm.data.pedidos.push(data.pedidos[key]);\n                    }\n\n                    for (var key in data.clientes) {\n                        vm.data.clientes.push(data.clientes[key]);\n                    }\n\n                    for (var key in data.produtos) {\n                        vm.data.produtos.push(data.produtos[key]);\n                    }\n\n                    vm.data.offset = data.offset;\n\n                    if (data.pedidos.length + data.clientes.length + data.produtos.length < limit) {\n                        vm.hasMore = false;\n                    }\n\n                    if (!vm.data.pedidos.length && !vm.data.produtos.length && !vm.data.clientes.length) {\n                        vm.noResults = true;\n                    }\n                });\n            }\n        };\n\n        /**\n         * Infinite scroll\n         * @return {void}\n         */\n        vm.more = function() {\n            vm.nSearch++;\n            vm.search(true);\n        };\n\n        /**\n         * Fecha busca\n         * @return {void}\n         */\n        vm.close = function() {\n            $rootScope.$broadcast('closeSearch');\n            vm.term     = null;\n            vm.prevTerm = null;\n            vm.nSearch  = 0;\n            vm.data     = {};\n            vm.hasMore  = false;\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PedidoComentarioController', PedidoComentarioController);\n\n    function PedidoComentarioController($rootScope, $stateParams, $scope, Restangular, toaster, ngDialog, Comentario, ValidationErrors) {\n        var vm = this;\n\n        vm.comentarios      = [];\n        vm.pedido_id        = (typeof $scope.ngDialogData !== 'undefined' ? $scope.ngDialogData.pedido_id : null) || $stateParams.id;\n        vm.loading          = false;\n        vm.validationErrors = [];\n\n        /**\n         * Load comentarios\n         */\n        vm.load = function() {\n            vm.loading = true;\n\n            Comentario.getFromOrder(vm.pedido_id).then(function(comentarios) {\n                vm.loading = false;\n                vm.comentarios = comentarios;\n            });\n        };\n\n        vm.load();\n\n        /**\n         * Save comentario\n         */\n        vm.save = function() {\n            vm.loading          = true;\n            vm.validationErrors = [];\n\n            Comentario.save({\n                'pedido_id':  vm.pedido_id,\n                'comentario': vm.comentario\n            }).then(\n                function() {\n                    vm.loading = false;\n                    vm.comentario = null;\n                    vm.formComentario.$setPristine();\n\n                    vm.load();\n                    toaster.pop('success', 'Sucesso!', 'Comentário cadastrado com sucesso!');\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n\n        /**\n         * Destroy comentário\n         */\n        vm.destroy = function(comentario) {\n            vm.loading = true;\n\n            Comentario.delete(comentario).then(function() {\n                vm.loading = false;\n                vm.load();\n                toaster.pop('success', 'Sucesso!', 'Comentário excluído com sucesso!');\n            });\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PedidoDetalheController', PedidoDetalheController);\n\n    function PedidoDetalheController($rootScope, $state, $stateParams, ngDialog, SweetAlert, toaster, Pedido, RastreioHelper, NotaHelper, ClienteEnderecoHelper, PedidoHelper, ClienteHelper, InspecaoTecnicaHelper, PedidoProduto) {\n        var vm = this;\n\n        vm.pedido_id   = $stateParams.id;\n        vm.pedido      = {};\n        vm.hasSeminovo = false;\n        vm.loading     = false;\n\n        /**\n         * @type {Object}\n         */\n        vm.notaHelper = NotaHelper;\n\n        /**\n         * @type {Object}\n         */\n        vm.rastreioHelper = RastreioHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.clienteEnderecoHelper = ClienteEnderecoHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.pedidoHelper = PedidoHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.clienteHelper = ClienteHelper.init(vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.inspecaoTecnicaHelper = InspecaoTecnicaHelper.init(vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Pedido.get(vm.pedido_id).then(function(pedido) {\n                vm.pedido  = pedido;\n                vm.loading = false;\n\n                for (var pedidoProduto in vm.pedido.produtos) {\n                    if (parseInt(vm.pedido.produtos[pedidoProduto].produto.estado) === 1) {\n                        vm.hasSeminovo = true;\n                        break;\n                    }\n                }\n            });\n        };\n\n        vm.load();\n\n        /**\n         * Abre formulario para atualizar ou inserir produtos no pedido\n         *\n         * @param  {Object} orderProduct produto do pedido\n         * @return {void}\n         */\n        vm.openOrderProductForm = function(orderProduct) {\n            ngDialog.open({\n                template: 'views/pedido/form_pedido_produto.html',\n                controller: 'PedidoProdutoFormController',\n                controllerAs: 'PedidoProdutoForm',\n                data: {\n                    pedidoProduto: orderProduct || {},\n                    pedido_id: vm.pedido.id\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) {\n                    vm.load();\n                }\n            });\n        };\n\n        /**\n         * Mudar o status do pedido para segurado\n         * @return {void}\n         */\n        vm.toggleHold = function() {\n            Pedido.segurar(vm.pedido.id, !(vm.pedido.segurado)).then(function(pedido) {\n                vm.load();\n                vm.loading = false;\n                toaster.pop('success', 'Sucesso!', 'Pedido ' + (vm.pedido.segurado ? 'segurado' : 'liberado') + ' com sucesso!');\n            });\n        };\n\n        /**\n         * Priorizar pedido\n         */\n        vm.togglePriority = function() {\n            vm.loading = true;\n\n            Pedido.prioridade(vm.pedido.id, !(vm.pedido.priorizado)).then(function(pedido) {\n                vm.load();\n                vm.loading = false;\n                toaster.pop('success', 'Sucesso!', 'Prioridade do pedido alterada com sucesso!');\n            });\n        };\n\n        /**\n         * Retorna a classe de status do pedido\n         *\n         * @return {string}\n         */\n        vm.parseStatusClass = function() {\n            switch (vm.pedido.status) {\n                case '1':\n                case '2':\n                    return 'info';\n                case '3':\n                    return 'success';\n                case '4':\n                case '5':\n                    return 'danger';\n            }\n        };\n\n        /**\n         * Retorna a classe de status do rastreio\n         *\n         * @return {string}\n         */\n        vm.parseRastreioStatusClass = function(rastreio) {\n            switch (rastreio.status) {\n                case '1':\n                case '7':\n                case '8':\n                    return 'info';\n                case '2':\n                    return 'warning';\n                case '4':\n                    return 'success';\n                case '3':\n                case '5':\n                case '6':\n                    return 'danger';\n            }\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PedidoListController', PedidoListController);\n\n    function PedidoListController(Pedido, Filter, TableHeader) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('pedidos', vm, {\n            'pedidos.codigo_marketplace': 'LIKE',\n            'clientes.nome':              'LIKE',\n            'pedidos.total':              'BETWEEN',\n            'pedidos.created_at':         'BETWEEN'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('pedidos', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Pedido.getList({\n                fields:   ['pedidos.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Retorna a classe de status do pedido\n         *\n         * @param  {Pedido} pedido\n         * @return {string}\n         */\n        vm.parseStatusClass = function(pedido) {\n            switch (pedido.status) {\n                case '1':\n                case '2':\n                    return 'info';\n                case '3':\n                    return 'success';\n                case '4':\n                case '5':\n                    return 'danger';\n            }\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PedidoProdutoFormController', PedidoProdutoFormController);\n\n    function PedidoProdutoFormController($scope, toaster, PedidoProduto, Produto) {\n        var vm = this;\n\n       vm.produtos = [];\n\n        if (typeof $scope.ngDialogData.pedidoProduto != 'undefined') {\n            vm.pedidoProduto = angular.copy($scope.ngDialogData.pedidoProduto);\n        } else {\n            vm.pedidoProduto = {};\n        }\n        vm.original = vm.pedidoProduto;\n\n        if (typeof $scope.ngDialogData.pedido_id != 'undefined') {\n            vm.pedidoProduto.pedido_id = angular.copy($scope.ngDialogData.pedido_id);\n        }\n\n        vm.load = function() {\n            vm.loading = true;\n\n            PedidoProduto.get(vm.pedidoProduto.id).then(function(pedidoProduto) {\n                vm.pedidoProduto = pedidoProduto;\n\n                if (typeof vm.pedidoProduto.produto !== 'undefined' && vm.pedidoProduto.produto) {\n                    vm.produtos = [ vm.pedidoProduto.produto ];\n                }\n\n                vm.loading = false;\n            });\n        };\n\n        if (vm.pedidoProduto.id) {\n            vm.load();\n        }\n\n        vm.search = function(term) {\n            if (term) {\n                Produto.search(term).then(function(response) {\n                    vm.produtos = response;\n                });\n            }\n        };\n\n        /**\n         * Salva o pedidoProduto\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            if (typeof vm.pedidoProduto.produto !== 'undefined') {\n                vm.pedidoProduto.produto_sku = vm.pedidoProduto.produto.sku;\n            }\n\n            var modificado = (vm.original.produto_sku != vm.pedidoProduto.produto_sku && typeof vm.original.id != 'undefined');\n            if (modificado) {\n                vm.pedidoProduto.imei = null;\n            }\n\n            PedidoProduto.save(vm.pedidoProduto, vm.pedidoProduto.id || null).then(function(response) {\n                toaster.pop('success', 'Sucesso!', 'Produto do pedido salvo com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n\n        /**\n         * Exclui o pedidoProduto\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            PedidoProduto.delete(vm.pedidoProduto.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Produto do pedido excluído com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('ProdutoFormController', ProdutoFormController);\n\n    function ProdutoFormController($state, $stateParams, SweetAlert, toaster, TabsHelper, PedidoHelper, Produto, /*Linha, Marca, Atributo, */ValidationErrors) {\n        var vm       = this;\n        var original = {\n            linha_id: null,\n            attrs   : null\n        };\n\n        vm.produto = {\n            sku    : $stateParams.sku || null,\n            unidade: 'un',\n            ativo  : '1',\n            estado : '0'\n        };\n\n        vm.sku = {\n            original: vm.produto.sku,\n            gerado  : false\n        };\n\n        /*vm.linhas = {};\n        vm.marcas = {};*/\n\n        vm.validationErrors = [];\n        vm.tabsHelper       = TabsHelper;\n        vm.pedidoHelper     = PedidoHelper;\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Produto.get(vm.produto.sku).then(function(produto) {\n                vm.produto = produto;\n\n                if (!vm.produto.unidade)\n                    vm.produto.unidade = 'un';\n\n                if (vm.produto.ativo === null)\n                    vm.produto.ativo = '1';\n\n                if (vm.produto.estado === null)\n                    vm.produto.estado = '0';\n\n                /*if (vm.produto.linha_id)\n                    original.linha_id = vm.produto.linha_id;\n\n                if (vm.produto.linha_id && vm.produto.atributos) {\n                    original.attrs = vm.produto.atributos;\n                }\n\n                if (vm.produto.linha_id)\n                    vm.loadAtributos();*/\n\n                vm.loading = false;\n            });\n        };\n\n        /*vm.loadLinhas = function() {\n            vm.loading = true;\n\n            Linha.getList().then(function(linhas) {\n                vm.linhas = linhas;\n                vm.loading = false;\n            });\n        };\n\n        vm.loadMarcas = function() {\n            vm.loading = true;\n\n            Marca.getList().then(function(marcas) {\n                vm.marcas = marcas;\n                vm.loading = false;\n            });\n        };\n\n        vm.loadAtributos = function() {\n            vm.loading = true;\n\n            Atributo.fromLinha(vm.produto.linha_id).then(function(atributos) {\n                vm.loading = false;\n\n                if (vm.produto.linha_id == original.linha_id && original.attrs) {\n                    var mergedAttrs = original.attrs;\n\n                    for (var i in atributos) {\n                        for (var j in original.attrs) {\n                            if (original.attrs[j] && atributos[i]) {\n                                if (original.attrs[j].id === atributos[i].id) {\n                                    atributos[i] = original.attrs[j];\n                                }\n                            }\n                        }\n                    }\n                }\n\n                vm.produto.atributos = atributos;\n            });\n        };*/\n\n        if (vm.produto.sku)\n            vm.load();\n\n        /*vm.loadLinhas();\n        vm.loadMarcas();*/\n\n        /*\n         * Recarrega os atributos e seta o ncm padrão ao alterar\n         */\n        /*vm.linhaChange = function() {\n            vm.produto.linha_id = vm.produto.linha.id;\n\n            Linha.get(vm.produto.linha_id).then(function(linha) {\n                vm.produto.linha = linha;\n\n                if (linha.ncm_padrao) {\n                    SweetAlert.swal({\n                        type: 'info',\n                        title: '',\n                        html: true,\n                        text: 'O código NCM padrão desta linha é: <b>' + linha.ncm_padrao + '</b><br/>Deseja utilizá-lo?',\n                        showCancelButton: true,\n                        cancelButtonText: 'Não',\n                        confirmButtonColor: '#40D9CA',\n                        confirmButtonText: 'Sim'\n                    }, function(isConfirm) {\n                        if (isConfirm) {\n                            vm.produto.ncm = linha.ncm_padrao;\n                        }\n                    });\n                }\n            });\n\n            vm.loadAtributos();\n        };*/\n\n        /*\n         * Recarrega os atributos e seta o ncm padrão ao alterar\n         */\n        /*vm.marcaChange = function() {\n            vm.produto.marca_id = vm.produto.marca.id;\n        };*/\n\n        /*\n         * Retona um novo SKU para o produto\n         */\n        vm.generateSku = function() {\n            function generate() {\n                Produto.generateSku(vm.sku.original).then(function(product) {\n                    vm.produto.sku = product.sku;\n                    $state.go('app.produtos.form', {sku: product.sku}, {notify: false});\n                    vm.sku.gerado = true;\n\n                    toaster.pop('success', 'Sucesso!', 'Um novo SKU foi gerado para este produto!');\n\n                    for (var i in vm.produto.atributos) {\n                        if (vm.produto.atributos[i] && typeof vm.produto.atributos[i] == 'object' && vm.produto.atributos[i].id) {\n                            if (!vm.produto.atributos[i].pivot)\n                                vm.produto.atributos[i].pivot = {};\n\n                            vm.produto.atributos[i].pivot.produto_sku = product.sku;\n                        }\n                    }\n                });\n            }\n\n            if (!vm.produto.sku) {\n                generate();\n            } else {\n                SweetAlert.swal({\n                    title: \"Tem certeza?\",\n                    text: \"Esta ação não poderá ser desfeita!\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    cancelButtonText: \"Não\",\n                    confirmButtonColor: \"#F55752\",\n                    confirmButtonText: \"Sim!\"\n                }, function(isConfirm) {\n                    if (isConfirm) {\n                        generate();\n                    }\n                });\n            }\n        };\n\n        /**\n         * Salva o produto\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            function save() {\n                vm.validationErrors = [];\n                Produto.save(vm.produto, ((vm.sku.gerado) ? vm.produto.sku : vm.sku.original)).then(\n                    function() {\n                        toaster.pop('success', 'Sucesso!', 'Produto salvo com sucesso!');\n                        $state.go('app.produtos.index');\n                    },\n                    function(error) {\n                        vm.validationErrors = ValidationErrors.handle(error);\n                    }\n                );\n            }\n\n            if (vm.sku.gerado || vm.sku.original == vm.produto.sku) {\n                save();\n            } else {\n                Produto.checkSku(vm.produto.sku).then(function(response) {\n                    if (response.exists) {\n                        toaster.pop('error', 'SKU existente!', 'Impossível cadastrar produto! Utilize outro SKU!');\n                    } else {\n                        save();\n                    }\n                });\n            }\n        };\n\n        /**\n         * Exclui o produto\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            Produto.delete(vm.produto.sku).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Produto excluido com sucesso!');\n                $state.go('app.produtos.index');\n            });\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('ProdutoListController', ProdutoListController);\n\n    function ProdutoListController(Filter, TableHeader, Produto) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('produtos', vm, {\n            'produtos.titulo' : 'LIKE',\n            'produtos.estoque': 'BETWEEN'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('produtos', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Produto.getList({\n                fields:   ['produtos.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n\n        vm.load();\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RelatorioPedidosController', RelatorioPedidosController);\n\n    function RelatorioPedidosController($window, $location, $anchorScroll, $httpParamSerializer, envService, toaster, Restangular) {\n        var vm = this;\n\n        // configuracao do drag and drop\n        vm.dragControlListeners = {\n            clone: false,\n            allowDuplicates: false,\n            containment: '#horizontal-container',\n            accept: function (sourceItemHandleScope, destSortableScope) {\n                return sourceItemHandleScope.itemScope.sortableScope.$id === destSortableScope.$id;\n            }\n        };\n\n        vm.result = false;\n        vm.groupedResult = false;\n        vm.totalResults = 0;\n        vm.labels = [];\n\n        // gera o retorno de acordo com os parametros\n        vm.gerar = function(tipo) {\n            if (vm.params.fields.length) {\n                var params = {\n                    filter: vm.params.filter,\n                    group: vm.params.group,\n                    fields: vm.params.fields,\n                    order: vm.params.order,\n                    relation: vm.params.relation\n                };\n\n                if (tipo) {\n                    var auth = {\n                        token: localStorage.getItem('satellizer_token')\n                    };\n\n                    $window.open(envService.read('apiUrl') + '/relatorios/pedido/' + tipo + '?params=' + JSON.stringify(params) + '&' + $httpParamSerializer(auth), 'relatorio-pedido');\n                } else {\n                    vm.result = false;\n                    vm.labels = [];\n                    Restangular.one('relatorios/pedido', tipo || null).customPOST(params).then(function(response) {\n                        vm.groupedResult  = !!vm.params.group;\n                        vm.result = Restangular.copy(response, vm.result);\n                        vm.result = angular.copy(response, vm.result);\n\n                        vm.totalResults = [];\n                        if (!vm.groupedResult) {\n                            vm.totalResults = vm.result.length;\n                            vm.totalResults = vm.totalResults + ((vm.totalResults == 1) ? ' registro encontrado' : ' registros encontrados');\n                            for (var key in vm.result[0]) {\n                                vm.labels.push(key);\n                            }\n                        } else {\n                            vm.totalResults = vm.result.length;\n                            vm.totalResults = vm.totalResults + ((vm.totalResults == 1) ? ' grupo encontrado' : ' grupos encontrados');\n                            for (var chave in vm.result[0].data[0]) {\n                                vm.labels.push(chave);\n                            }\n                        }\n\n                        $location.hash('relatorio-resultado');\n                        $anchorScroll();\n                    });\n                }\n            } else {\n                toaster.pop('warning', '', 'Você precisa selecionar os campos antes de gerar o relatório!');\n            }\n        };\n\n        // valores padrao\n        vm.defaults = function() {\n            vm.result = false;\n            vm.labels = [];\n\n            vm.list = {};\n            vm.list.cities = {};\n\n            vm.params = {\n                filter: [],\n                group: '',\n                fields: [\n                    {label: 'Código marketplace', name: 'codigo_marketplace'},\n                    {label: 'Marketplace', name: 'marketplace'},\n                    {label: 'Status', name: 'status'},\n                    {label: 'Total', name: 'total'},\n                    {label: 'Data de abertura', name: 'created_at'},\n                ],\n                order: [],\n                relation: {\n                    cliente: false,\n                    endereco: false,\n                    produtos: false\n                }\n            };\n\n            vm.list.status = {\n                0: 'Pendente',\n                1: 'Pago',\n                2: 'Enviado',\n                3: 'Entregue',\n                5: 'Cancelado'\n            };\n\n            vm.list.marketplace = {\n                b2w: 'B2W',\n                cnova: 'CNOVA',\n                mercadolivre: 'Mercado Livre',\n                walmart: 'Walmart',\n                site: 'Site'\n            };\n\n            vm.list.fields = {};\n\n            vm.list.fields.pedido = {\n                codigo_api: 'Código',\n                frete_valor: 'Frete valor',\n                frete_metodo: 'Frete método',\n                pagamento_metodo: 'Pagamento método',\n                codigo_marketplace: 'Código marketplace',\n                marketplace: 'Marketplace',\n                operacao: 'Operação',\n                total: 'Total',\n                estimated_delivery: 'Entrega estimada',\n                status: 'Status',\n                protocolo: 'Protocolo cancelamento',\n                segurado: 'Segurado',\n                reembolso: 'Reembolso',\n                priorizado: 'Priorizado',\n                created_at: 'Data de abertura'\n            };\n\n            vm.list.fields.cliente = {\n                'cliente.nome': 'Nome',\n                'cliente.taxvat': 'Documento',\n                'cliente.fone': 'Telefone',\n                'cliente.email': 'E-mail'\n            };\n\n            vm.list.fields.endereco = {\n                'endereco.rua': 'Rua',\n                'endereco.numero': 'Número',\n                'endereco.bairro': 'Bairro',\n                'endereco.complemento': 'Complemento',\n                'endereco.cidade': 'Cidade',\n                'endereco.uf': 'UF',\n                'endereco.cep': 'CEP'\n            };\n\n            vm.list.fields.produto = {\n                'produtos.titulo': 'Título',\n                'produtos.estado': 'Estado',\n                'pedido_produtos.produto_sku': 'SKU',\n                'pedido_produtos.imei': 'IMEI',\n                'pedido_produtos.quantidade': 'Quantidade',\n                'pedido_produtos.valor': 'Valor'\n            };\n\n            vm.list.fields.all = _.extend(vm.list.fields.all, vm.list.fields.pedido);\n            vm.list.fields.all = _.extend(vm.list.fields.all, vm.list.fields.cliente);\n            vm.list.fields.all = _.extend(vm.list.fields.all, vm.list.fields.endereco);\n            vm.list.fields.all = _.extend(vm.list.fields.all, vm.list.fields.produto);\n\n            vm.params.filter = {\n                total: {operator: 'BETWEEN'},\n                'pedidos.created_at': {operator: 'BETWEEN'},\n                estimated_delivery: {operator: 'BETWEEN'},\n                status: {operator: 'IN', value: {}},\n                marketplace: {operator: 'IN', value: {}},\n                'cliente_enderecos.uf': '',\n                'cliente_enderecos.cidade': '',\n                'pedido_produtos.produto_sku': {operator: 'LIKE'},\n                'pedido_produtos.imei': {operator: 'LIKE'},\n                'pedido_produtos.quantidade': {operator: 'BETWEEN'},\n                'pedido_produtos.valor': {operator: 'BETWEEN'},\n                'produtos.estado': {operator: '='}\n            };\n\n            vm.setFilters = {\n                status: '',\n                marketplace: ''\n            };\n\n            vm.setField = '';\n            vm.setOrder = '';\n        };\n\n        // limpa os parametros\n        vm.limpar = function() {\n            vm.defaults();\n            $location.hash('');\n            $anchorScroll();\n        };\n\n        // carrega de inicio\n        vm.load = function() {\n            vm.defaults();\n        };\n\n        vm.load();\n\n        // pega as cidades daquele estado\n        vm.loadCities = function() {\n            vm.params.filter['cliente_enderecos.cidade'] = '';\n\n            if (typeof vm.params.filter['cliente_enderecos.uf'].value !== 'undefined' && vm.params.filter['cliente_enderecos.uf'].value) {\n                Restangular.one('pedidos/cidades', vm.params.filter['cliente_enderecos.uf'].value).getList().then(function(response) {\n                    vm.list.cities = response;\n                });\n            }\n        };\n\n        // limpa os parametros da relacao antiga\n        vm.changeRelation = function() {\n            if (vm.params.relation.endereco !== true) {\n                vm.params.filter['cliente_enderecos.uf'] = '';\n                vm.params.filter['cliente_enderecos.cidade'] = '';\n            }\n\n            if (vm.params.relation.produtos !== true) {\n                vm.params.filter['pedido_produtos.produto_sku'] = {operator: 'LIKE'};\n                vm.params.filter['pedido_produtos.imei'] = {operator: 'LIKE'};\n                vm.params.filter['pedido_produtos.quantidade'] = {operator: 'BETWEEN'};\n                vm.params.filter['pedido_produtos.valor'] = {operator: 'BETWEEN'};\n            }\n        };\n\n        // adiciona um filtro\n        vm.addFilter = function(key) {\n            vm.params.filter[key].value[vm.setFilters[key]] = vm.list[key][vm.setFilters[key]];\n            vm.setFilters[key] = '';\n        };\n\n        // remove um filtro\n        vm.removeFilter = function(key, index) {\n            delete vm.params.filter[key].value[index];\n        };\n\n        // adiciona uma ordenacao\n        vm.addOrder = function() {\n            var exists = _.some(vm.params.order, function(p) {\n                return p.name == vm.setOrder;\n            });\n\n            if (!exists) {\n                vm.params.order.push({\n                    label: vm.list.fields.all[vm.setOrder],\n                    name: vm.setOrder,\n                    order: 'asc'\n                });\n            }\n\n            vm.setOrder = '';\n        };\n\n        // aletra o sentido de uma ordem\n        vm.changeOrder = function(index) {\n            vm.params.order[index].order = (vm.params.order[index].order == 'asc') ? 'desc' : 'asc';\n        };\n\n        // remove um ordenacao\n        vm.removeOrder = function(index) {\n            delete vm.params.order[index];\n            vm.params.order = _.compact(vm.params.order);\n        };\n\n        // adiciona um campo\n        vm.addField = function() {\n            var exists = _.some(vm.params.fields, function(p) {\n                return p.name == vm.setField;\n            });\n\n            if (!exists) {\n                vm.params.fields.push({\n                    label: vm.list.fields.all[vm.setField],\n                    name: vm.setField\n                });\n            }\n\n            vm.setField = '';\n        };\n\n        // remove um campo\n        vm.removeField = function(index) {\n            delete vm.params.fields[index];\n            vm.params.fields = _.compact(vm.params.fields);\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RelatorioProdutosController', RelatorioProdutosController);\n\n    function RelatorioProdutosController($window, $location, $anchorScroll, $httpParamSerializer, envService, toaster, Restangular) {\n        var vm = this;\n\n        // configuração do drag and drop\n        vm.dragControlListeners = {\n            clone: false,\n            allowDuplicates: false,\n            containment: '#horizontal-container',\n            accept: function (sourceItemHandleScope, destSortableScope) {\n                return sourceItemHandleScope.itemScope.sortableScope.$id === destSortableScope.$id;\n            }\n        };\n\n        vm.result = false;\n        vm.labels = [];\n        vm.groupedResult = false;\n        vm.totalResults = 0;\n\n        // Colhe os parametros e gera o resultado\n        vm.gerar = function(tipo) {\n            if (vm.params.fields.length) {\n                var params = {\n                    filter: vm.params.filter,\n                    group: vm.params.group,\n                    fields: vm.params.fields,\n                    order: vm.params.order,\n                    relation: vm.params.relation\n                };\n\n                if (tipo) {\n                    var auth = {\n                        token: localStorage.getItem('satellizer_token')\n                    };\n\n                    $window.open(envService.read('apiUrl') + '/relatorios/produto/' + tipo + '?params=' + JSON.stringify(params) + '&' + $httpParamSerializer(auth), 'relatorio-produto');\n                } else {\n                    vm.result = false;\n                    vm.labels = [];\n                    Restangular.one('relatorios/produto', tipo || null).customPOST(params).then(function(response) {\n                        vm.groupedResult  = !!vm.params.group;\n                        vm.result = Restangular.copy(response, vm.result);\n                        vm.result = angular.copy(response, vm.result);\n\n                        vm.totalResults = [];\n                        if (!vm.groupedResult) {\n                            vm.totalResults = vm.result.length;\n                            vm.totalResults = vm.totalResults + ((vm.totalResults == 1) ? ' registro encontrado' : ' registros encontrados');\n                            for (var key in vm.result[0]) {\n                                vm.labels.push(key);\n                            }\n                        } else {\n                            vm.totalResults = vm.result.length;\n                            vm.totalResults = vm.totalResults + ((vm.totalResults == 1) ? ' grupo encontrado' : ' grupos encontrados');\n                            for (var chave in vm.result[0].data[0]) {\n                                vm.labels.push(chave);\n                            }\n                        }\n\n                        $location.hash('relatorio-resultado');\n                        $anchorScroll();\n                    });\n                }\n            } else {\n                toaster.pop('warning', '', 'Você precisa selecionar os campos antes de gerar o relatório!');\n            }\n        };\n\n        // valores padrão\n        vm.defaults = function() {\n            vm.result = false;\n            vm.labels = [];\n\n            vm.params = {\n                filter: [],\n                group: '',\n                fields: [\n                    {label: 'Título', name: 'titulo'},\n                    {label: 'SKU', name: 'sku'},\n                    {label: 'Estoque', name: 'estoque'},\n                    {label: 'Estado', name: 'estado'},\n                    {label: 'Data de criação', name: 'created_at'}\n                ],\n                order: [],\n                relation: {\n                    pedido: false\n                }\n            };\n\n            vm.list = {};\n\n            vm.list['pedidos.status'] = {\n                0: 'Pendente',\n                1: 'Pago',\n                2: 'Enviado',\n                3: 'Entregue',\n                5: 'Cancelado'\n            };\n\n            vm.list['pedidos.marketplace'] = {\n                b2w: 'B2W',\n                cnova: 'CNOVA',\n                mercadolivre: 'Mercado Livre',\n                walmart: 'Walmart',\n                site: 'Site'\n            };\n\n            vm.list.fields = {};\n\n            vm.list.fields.produto = {\n                titulo: 'Título',\n                sku: 'SKU',\n                estoque: 'Estoque',\n                estado: 'Estado',\n                created_at: 'Data de criação'\n            };\n\n            vm.list.fields.pedido = {\n                'pedido_produtos.quantidade': 'Quantidade',\n                'pedido_produtos.valor': 'Valor do produto',\n                'pedidos.codigo_marketplace': 'Código marketplace',\n                'pedidos.marketplace': 'Marketplace',\n                'pedidos.status': 'Status',\n                'pedidos.total': 'Valor total',\n                'pedidos.estimated_delivery': 'Entrega estimada',\n                'pedidos.created_at': 'Data do pedido'\n            };\n\n            vm.list.fields.all = _.extend(vm.list.fields.all, vm.list.fields.produto);\n            vm.list.fields.all = _.extend(vm.list.fields.all, vm.list.fields.pedido);\n\n            vm.params.filter = {\n                sku: {operator: 'LIKE'},\n                titulo: {operator: 'LIKE'},\n                estoque: {operator: 'BETWEEN'},\n                estado: {operator: '='},\n                'produtos.created_at': {operator: 'BETWEEN'},\n                'pedido_produtos.imei': {operator: 'LIKE'},\n                'pedido_produtos.quantidade': {operator: 'BETWEEN'},\n                'pedido_produtos.valor': {operator: 'BETWEEN'},\n                'pedidos.marketplace': {operator: 'IN', value: {}},\n                'pedidos.status': {operator: 'IN', value: {}},\n                'pedidos.total': {operator: 'BETWEEN'},\n                'pedidos.created_at': {operator: 'BETWEEN'},\n                'pedidos.estimated_delivery': {operator: 'BETWEEN'}\n            };\n\n            vm.setFilters = {\n                'pedidos.status': '',\n                'pedidos.marketplace': ''\n            };\n\n            vm.setField = '';\n            vm.setOrder = '';\n        };\n\n        // limpa os campos\n        vm.limpar = function() {\n            vm.defaults();\n            $location.hash('');\n            $anchorScroll();\n        };\n\n        // carrega de inicio\n        vm.load = function() {\n            vm.defaults();\n        };\n\n        vm.load();\n\n        // Dispara ao alterar uma relacao, limpando os paramtros da relacao antiga\n        vm.changeRelation = function() {\n            if (vm.params.relation.pedido !== true) {\n                vm.params.filter['pedido_produtos.quantidade'] = {operator: 'BETWEEN'};\n                vm.params.filter['pedido_produtos.valor'] = {operator: 'BETWEEN'};\n                vm.params.filter['pedidos.marketplace'] = {operator: 'IN', value: {}};\n                vm.params.filter['pedidos.status'] = {operator: 'IN', value: {}};\n                vm.params.filter['pedidos.total'] = {operator: 'BETWEEN'};\n                vm.params.filter['pedidos.created_at'] = {operator: 'BETWEEN'};\n                vm.params.filter['pedidos.estimated_delivery'] = {operator: 'BETWEEN'};\n            }\n        };\n\n        // adiciona um filtro\n        vm.addFilter = function(key) {\n            vm.params.filter[key].value[vm.setFilters[key]] = vm.list[key][vm.setFilters[key]];\n            vm.setFilters[key] = '';\n        };\n\n        // remove um filtro\n        vm.removeFilter = function(key, index) {\n            delete vm.params.filter[key].value[index];\n        };\n\n        // adiciona uma ordenacao\n        vm.addOrder = function() {\n            var exists = _.some(vm.params.order, function(p) {\n                return p.name == vm.setOrder;\n            });\n\n            if (!exists) {\n                vm.params.order.push({\n                    label: vm.list.fields.all[vm.setOrder],\n                    name: vm.setOrder,\n                    order: 'asc'\n                });\n            }\n\n            vm.setOrder = '';\n        };\n\n        // altera o sentido de uma ordenacao\n        vm.changeOrder = function(index) {\n            vm.params.order[index].order = (vm.params.order[index].order == 'asc') ? 'desc' : 'asc';\n        };\n\n        // remove uma ordenacao\n        vm.removeOrder = function(index) {\n            delete vm.params.order[index];\n            vm.params.order = _.compact(vm.params.order);\n        };\n\n        // adiciona um campo\n        vm.addField = function() {\n            var exists = _.some(vm.params.fields, function(p) {\n                return p.name == vm.setField;\n            });\n\n            if (!exists) {\n                vm.params.fields.push({\n                    label: vm.list.fields.all[vm.setField],\n                    name: vm.setField\n                });\n            }\n\n            vm.setField = '';\n        };\n\n        // remove um campo\n        vm.removeField = function(index) {\n            delete vm.params.fields[index];\n            vm.params.fields = _.compact(vm.params.fields);\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RelatorioRetiradaEstoqueController', RelatorioRetiradaEstoqueController);\n\n    function RelatorioRetiradaEstoqueController($window, $location, $anchorScroll, $httpParamSerializer, envService, toaster, Restangular) {\n        var vm = this;\n\n        vm.result = false;\n        vm.totalResults = 0;\n\n        // Colhe os parametros e gera o resultado\n        vm.gerar = function(tipo) {\n            if (tipo) {\n                var auth = {\n                    token: localStorage.getItem('satellizer_token')\n                };\n\n                $window.open(\n                    envService.read('apiUrl')\n                        + '/relatorios/retirada-estoque/'\n                        + tipo\n                        + '?params='\n                        + JSON.stringify(vm.filter)\n                        + '&'\n                        + $httpParamSerializer(auth),\n                    'relatorio-retirada-estoque'\n                );\n            } else {\n                vm.result = false;\n                Restangular.one('relatorios/retirada-estoque', tipo || null).customPOST(vm.filter).then(function(response) {\n                    vm.result       = Restangular.copy(response, vm.result);\n                    vm.result       = angular.copy(response, vm.result);\n                    vm.totalResults = vm.result.length + ((vm.result.length == 1) ? ' registro encontrado' : ' registros encontrados');\n\n                    $location.hash('relatorio-resultado');\n                    $anchorScroll();\n                });\n            }\n        };\n\n        // valores padrão\n        vm.defaults = function() {\n            vm.result = false;\n            vm.filter = {\n                'estado'             : '',\n                'pedidos.marketplace': [],\n                'pedidos.status'     : [1]\n            };\n\n            vm.list = {};\n\n            vm.list['pedidos.status'] = {\n                0: 'Pendente',\n                1: 'Pago',\n                2: 'Enviado',\n                3: 'Entregue',\n                5: 'Cancelado'\n            };\n\n            vm.list['pedidos.marketplace'] = {\n                b2w         : 'B2W',\n                cnova       : 'CNOVA',\n                mercadolivre: 'Mercado Livre',\n                walmart     : 'Walmart',\n                site        : 'Site'\n            };\n\n            vm.setFilters = {\n                'pedidos.status'     : '',\n                'pedidos.marketplace': ''\n            };\n        };\n\n        // limpa os campos\n        vm.limpar = function() {\n            vm.defaults();\n            $location.hash('');\n            $anchorScroll();\n        };\n\n        // carrega de inicio\n        vm.load = function() {\n            vm.defaults();\n        };\n\n        vm.load();\n\n        // adiciona um filtro\n        vm.addFilter = function(key) {\n            console.log(vm.filter[key]);\n            if (vm.filter[key].indexOf(vm.setFilters[key]) < 0) {\n                if (typeof vm.filter[key] == 'array' || typeof vm.filter[key] == 'object') {\n                    vm.filter[key].push(vm.setFilters[key]);\n                } else {\n                    vm.filter[key] = vm.setFilters[key];\n                }\n\n                vm.setFilters[key] = '';\n            }\n        };\n\n        // remove um filtro\n        vm.removeFilter = function(key, index) {\n            delete vm.filter[key][index];\n            console.log(vm.filter[key]);\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SugestaoDetalheController', SugestaoDetalheController);\n\n    function SugestaoDetalheController($scope, toaster, Sugestao, Usuario) {\n        var vm = this;\n\n        vm.sugestao = angular.copy($scope.ngDialogData.sugestao);\n\n        vm.arquivar = function() {\n            vm.sugestao.status = 2;\n            vm.save();\n        };\n\n        vm.aceitar = function() {\n            vm.sugestao.status = 1;\n            vm.save();\n        };\n\n        /**\n         * Salva a sugestao\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            Sugestao.save(vm.sugestao, vm.sugestao.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Sugestão / crítica salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SugestaoFormController', SugestaoFormController);\n\n    function SugestaoFormController($scope, toaster, Sugestao, Usuario, ValidationErrors) {\n        var vm = this;\n\n        vm.pessoas          = {};\n        vm.sugestao         = {};\n        vm.validationErrors = [];\n\n        vm.load = function() {\n            Usuario.getList().then(function(response) {\n                vm.pessoas = response;\n            });\n        };\n\n        vm.load();\n\n        /**\n         * Salva a sugestao\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            vm.validationErrors = [];\n\n            Sugestao.save(vm.sugestao).then(\n                function() {\n                    toaster.pop('success', 'Sucesso!', 'Sugestão / crítica enviada com sucesso!');\n                    $scope.closeThisDialog(true);\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SugestaoListController', SugestaoListController);\n\n    function SugestaoListController(Usuario, Sugestao, Filter, TableHeader, ngDialog) {\n        var vm = this;\n\n        vm.usuarios = {};\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('sugestoes', vm, {\n            'sugestoes.created_at': 'BETWEEN'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('sugestoes', vm);\n\n        vm.loadUsuarios = function() {\n            vm.loading = true;\n\n            Usuario.getList().then(function(response) {\n                vm.usuarios = response.data;\n                vm.loading = false;\n            });\n        };\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Sugestao.getList({\n                fields:   ['sugestoes.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading  = false;\n                vm.loadUsuarios();\n            });\n        };\n\n        vm.load();\n\n        vm.parseStatusClass = function(status) {\n            if (status == 1) {\n                return 'success';\n            } else if (status == 2) {\n                return 'warning';\n            }\n        };\n\n        /**\n         * Abre o formulário da amrca\n         *\n         * @return {void}\n         */\n        vm.openForm = function(sugestao) {\n            ngDialog.open({\n                template: 'views/sugestoes/detalhe.html',\n                controller: 'SugestaoDetalheController',\n                controllerAs: 'SugestaoDetalhe',\n                data: {\n                    sugestao: sugestao || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('UsuarioFormController', UsuarioFormController);\n\n    function UsuarioFormController(Usuario, $rootScope, $scope, toaster) {\n        var vm = this;\n\n        vm.usuario = angular.copy($scope.ngDialogData.usuario);\n\n        // Apenas para edição\n        vm.usuario.novasRoles = [];\n        if (vm.usuario.hasOwnProperty('roles')) {\n            angular.forEach(vm.usuario.roles, function(role) {\n                vm.usuario.novasRoles[role.id] = role.id;\n            });\n        }\n\n        /**\n         * Salva o usuário\n         * \n         * @return {void} \n         */\n        vm.save = function() {\n            Usuario.save(vm.usuario, vm.usuario.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Usuário salvo com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular \n        .module('MeuTucano')\n        .controller('UsuarioListController', UsuarioListController);\n\n    function UsuarioListController(Usuario, TableHeader, ngDialog, toaster) {\n        var vm = this;\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('usuarios', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Usuario.getList({\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário do usuário\n         * \n         * @return {void} \n         */\n        vm.openForm = function(usuario) {\n            ngDialog.open({\n                template: 'views/usuario/form.html',\n                controller: 'UsuarioFormController',\n                controllerAs: 'UsuarioForm',\n                data: {\n                    usuario: usuario || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n\n        /**\n         * Remove o usuário\n         * \n         * @param  {int}  id \n         * @return {void}    \n         */\n        vm.destroy = function(id) {\n            Usuario.delete(id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Usuário deletado com sucesso!');\n                vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('AllnationProduct', AllnationProductModel);\n\n        function AllnationProductModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'allnation/products';\n\n            angular.extend(rest, {\n                createProduct: function(params) {\n                    return Restangular.one(this.baseUrl + '/create_product').customPOST(params || {});\n                }\n            });\n\n            return rest;\n        }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Cliente', ClienteModel);\n\n        function ClienteModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'clientes';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna o detalhe do cliente\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                detail: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all('clientes/detail').customGET(params || {});\n                },\n\n                /**\n                 * Altera o e-mail do cliente\n                 *\n                 * @param  {int} cliente_id\n                 * @param  {string} email\n                 * @return {Object}\n                 */\n                changeEmail: function(cliente_id, email) {\n                    return Restangular.one('clientes/email/' + cliente_id).customPUT({ 'email': email });\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Endereco', EnderecoModel);\n\n        function EnderecoModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'enderecos';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Conquista', ConquistaModel);\n\n        function ConquistaModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'gamification/conquistas';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Gamification', GamificationModel);\n\n        function GamificationModel(Restangular) {\n            var baseUrl = 'gamification';\n\n            return {\n                get: function(id) {\n                    return Restangular.one(baseUrl, id || null).get();\n                },\n\n                perfil: function(usuario_id) {\n                    return Restangular.one(baseUrl + '/perfil', usuario_id || null).customGET();\n                },\n\n                ranking: function(mes) {\n                    var string = '';\n\n                    if (typeof mes !== 'undefined') {\n                        string = '?mes=' + mes;\n                    }\n\n                    return Restangular.one(baseUrl + '/ranking' + string).customGET();\n                },\n\n                rankInfo: function() {\n                    return Restangular.one(baseUrl + '/rank-info').customGET();\n                },\n\n                avatar: function(gamification_id, avatar) {\n                    return Restangular.one(baseUrl + '/avatar', gamification_id).customPOST({\n                        avatar: avatar\n                    });\n                }\n            };\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Recompensa', RecompensaModel);\n\n        function RecompensaModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'gamification/recompensas';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Solicitacao', SolicitacaoModel);\n\n        function SolicitacaoModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'gamification/solicitacao';\n\n            angular.extend(rest, {\n                solicitar: function(params) {\n                    return Restangular.all(this.baseUrl + '/solicitar').post(params);\n                },\n\n                getList: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all(this.baseUrl + '/list').customGET(\"\", params || {});\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Tarefa', TarefaModel);\n\n        function TarefaModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'gamification/tarefas';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Troca', TrocaModel);\n\n        function TrocaModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'gamification/trocas';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Voto', VotoModel);\n\n        function VotoModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'gamification/votos';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('InspecaoTecnica', InspecaoTecnicaModel);\n\n        function InspecaoTecnicaModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'inspecao_tecnica';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna uma inspecao pelo pedido produto\n                 *\n                 * @param  {int} pedido_produtos_id\n                 * @return {Object}\n                 */\n                getByPedidoProduto: function(pedido_produtos_id) {\n                    return Restangular.one(this.baseUrl + '/get', pedido_produtos_id).get();\n                },\n\n                /**\n                 * Retorna as inspecoes não revisadas\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                fila: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all(this.baseUrl + '/fila').customGET(\"\", params || {});\n                },\n\n                /**\n                 * Retorna as inspecoes solicitadas pelo usuário atual\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                solicitadas: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all(this.baseUrl + '/solicitadas').customGET(\"\", params || {});\n                },\n\n                /**\n                 * Altera a prioridade da inspecao\n                 *\n                 * @param  {int} pedido_produtos_id\n                 * @return {Object}\n                 */\n                alterarPrioridade: function(pedido_produtos_id) {\n                    return Restangular.one(this.baseUrl + '/priority', pedido_produtos_id).customPOST();\n                },\n\n                /**\n                 * Cria uma reserva\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                reserva: function(params) {\n                    return Restangular.all(this.baseUrl + '/reserva').post(params);\n                },\n\n                /**\n                 * Verifica uma reserva\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                verificarReserva: function(params) {\n                    return Restangular.all(this.baseUrl + '/verificar-reserva').post(params);\n                },\n\n                /**\n                 * Solicitar inspeções tecnicas\n                 *\n                 * @param  {array} params Um array com o pedido_produto_id e quantidade\n                 * @return {Object}\n                 */\n                solicitar: function(params) {\n                    return Restangular.all(this.baseUrl + '/solicitar').post({orderProducts: params});\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Comentario', ComentarioModel);\n\n        function ComentarioModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'comentarios';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna os comentários de um pedido ordenados de forma descrescente por data\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                getFromOrder: function(params) {\n                    params = this.parseParams(params);\n                    return Restangular.all('comentarios').customGET(params || {});\n                },\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Pedido', PedidoModel);\n\n        function PedidoModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'pedidos';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna os pedidos prontos para serem faturados\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                faturamento: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all('pedidos/faturamento').customGET(\"\", params || {});\n                },\n\n                /**\n                 * Altera o status do pedido\n                 *\n                 * @param  {int} pedido_id\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                status: function(pedido_id, params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.one('pedidos/status', pedido_id).customPOST(params || {});\n                },\n\n                /**\n                 * Segura ou libera um pedido\n                 * @param  {int} pedido_id\n                 * @param  {boolean} segurar\n                 * @return {Object}\n                 */\n                segurar: function(pedido_id, segurar) {\n                    return Restangular.one('pedidos/segurar', pedido_id).customPUT({ 'segurar': segurar });\n                },\n\n                /**\n                 * Altera prioridade do pedido\n                 * @param  {int} pedido_id\n                 * @param  {boolean} priorizado\n                 * @return {Object}\n                 */\n                prioridade: function(pedido_id, priorizado) {\n                    return Restangular.one('pedidos/prioridade', pedido_id).customPUT({ 'priorizado': priorizado });\n                },\n\n                /**\n                 * Fatura um pedido\n                 *\n                 * @param  {int} pedido_id\n                 * @return {Object}\n                 */\n                faturar: function(pedido_id) {\n                    return Restangular.one('pedidos/faturar', pedido_id).get();\n                },\n\n                /**\n                 * Retorna o total de pedidos por marketplace por status\n                 *\n                 * @return {Object}\n                 */\n                totalOrdersStatus: function() {\n                    return Restangular.one('pedidos/total-orders-status').get();\n                },\n\n                /**\n                 * Retorna o total de pedidos pagos, entregues e enviados no dia mes e ano atual, bem como seu anterior imediato\n                 *\n                 * @return {Object}\n                 */\n                totalOrdersDate: function() {\n                    return Restangular.one('pedidos/total-orders-date').get();\n                },\n\n                /**\n                 * Retorna o total de pedidos pagos, enviados e entregues por dia no mês/ano atual ou por parâmetro\n                 *\n                 * @param  {int} mes\n                 * @param  {int} ano\n                 * @return {Object}\n                 */\n                totalOrders: function(mes, ano) {\n                    if (typeof mes !== 'undefined' && !isNaN(parseInt(mes))) {\n                        mes = parseInt(mes);\n                    } else {\n                        mes = false;\n                    }\n\n                    if (typeof ano !== 'undefined' && !isNaN(parseInt(ano))) {\n                        ano = parseInt(ano);\n                    } else {\n                        ano = false;\n                    }\n\n                    var string = '';\n                    string = (mes) ? '/' + mes : '';\n                    string += (ano) ? '/' + ano : '';\n\n                    return Restangular.one('pedidos/total-orders' + string).get();\n                },\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Rastreio', RastreioModel);\n\n        function RastreioModel(Rest, Restangular) {\n            var rest   = angular.copy(Rest);\n            rest.baseUrl  = 'rastreios';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna os rastreios importantes\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                important: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all('rastreios/important').customGET(\"\", params || {});\n                },\n\n                /**\n                 * Atualiza o status de todos rastreios\n                 *\n                 * @return {Object}\n                 */\n                refreshAll: function() {\n                    return Restangular.all('rastreios/refresh_all').customPUT();\n                },\n\n                /**\n                 * Força a geração ou regeração da imagem do rastreio\n                 *\n                 * @param  {int} rastreio_id\n                 * @return {void}\n                 */\n                historico: function(rastreio_id) {\n                    return Restangular.one('rastreios/historico/', rastreio_id).customPUT();\n                },\n\n                /**\n                 * Gera um código de rastreio\n                 *\n                 * @param  {int} servico pac|sedex\n                 * @return {void}\n                 */\n                codigo: function(servico) {\n                    return Restangular.one('codigos/gerar', servico).customGET();\n                },\n\n                /**\n                 * Monitora ou para de monitorar um rastreio\n                 *\n                 * @param  {int} rastreio_id\n                 * @param  {bool} monitorar\n                 * @return {Object}\n                 */\n                monitorar: function(rastreio_id, monitorar) {\n                    if (monitorar) {\n                        return Restangular.one('rastreio/monitorados').customPOST({ 'rastreio_id': rastreio_id });\n                    } else {\n                        return Restangular.one('rastreio/monitorados/parar', rastreio_id).customDELETE();\n                    }\n                },\n\n                /**\n                 * Retorna os dados necessários\n                 *\n                 * @param  {int} rastreio_id\n                 * @return {Object}\n                 */\n                getInspecaoData: function(rastreio_id) {\n                    return Restangular.one('rastreios/inspecao-tecnica', rastreio_id).customGET();\n                },\n\n                /**\n                 * Verfica se existem produtos seminovos\n                 *\n                 * @param  {int} rastreio_id\n                 * @return {Object}\n                 */\n                existsSeminovos: function(rastreio_id) {\n                    return Restangular.one('rastreios/busca-seminovos', rastreio_id).customGET();\n                }\n            });\n\n            return rest;\n        }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Atributo', AtributoModel);\n\n        function AtributoModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'atributos';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna os atributos relacionado a uma linha\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                fromLinha: function(params) {\n                    params = this.parseParams(params);\n                    // console.log(params);\n\n                    return Restangular.all('atributos/linha').customGET(params || {});\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Marca', MarcaModel);\n\n        function MarcaModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'marcas';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Produto', ProdutoModel);\n\n        function ProdutoModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'produtos';\n\n            angular.extend(rest, {\n                /**\n                 * Gera um novo SKU para o produto\n                 *\n                 * @param  {int} sku\n                 * @return {Object}\n                 */\n                generateSku: function(sku) {\n                    return Restangular.one(rest.baseUrl + '/generate-sku').customGET(sku || null);\n                },\n\n                /**\n                 * Checa se o sku existe\n                 *\n                 * @param  {int} sku\n                 * @return {Object}\n                 */\n                checkSku: function(sku) {\n                    return Restangular.one(rest.baseUrl + '/check-sku').customGET(sku);\n                },\n\n                /**\n                 * Busca produtos por sku ou titulo baseado no parametro\n                 *\n                 * @param  {string} term   termo a ser buscado\n                 * @param  {int|string}      estado estado do item (novo/seminovo)\n                 * @return {Object}\n                 */\n                search: function(term, estado) {\n                    if (typeof estado !== 'undefined' && estado) {\n                        estado = '?estado=' + estado;\n                    } else {\n                        estado = '';\n                    }\n\n                    return Restangular.one(rest.baseUrl + '/search/' + term + estado).customGET();\n                }\n            });\n\n            return rest;\n        }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Sugestao', SugestaoModel);\n\n        function SugestaoModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'sugestoes';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Senha', SenhaModel);\n\n        function SenhaModel(Rest, Restangular) {\n            var rest   = angular.copy(Rest);\n            rest.baseUrl  = 'senhas';\n\n            angular.extend(rest, {\n\n                /**\n                 * Retorna senhas do usuário\n                 *\n                 * @param  {int}    id\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                fromUser: function(id, params) {\n                    if (id) {\n                        return Restangular.one('senhas', id || 0).customGET(\"\", params || {});\n                    } else {\n                        return Restangular.one('senhas/minhas').customGET(\"\", params || {});\n                    }\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Usuario', UsuarioModel);\n\n        function UsuarioModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'usuarios';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('EnderecoFormController', EnderecoFormController);\n\n    function EnderecoFormController(Endereco, $scope, toaster, ValidationErrors) {\n        var vm = this;\n\n        vm.endereco = angular.copy($scope.ngDialogData.endereco);\n        vm.validationErrors = [];\n\n        /**\n         * Salva as informações da endereco\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            vm.validationErrors = [];\n\n            Endereco.save(vm.endereco, vm.endereco.id || null).then(\n                function() {\n                    toaster.pop('success', 'Sucesso!', 'Endereço salvo com sucesso!');\n                    $scope.closeThisDialog(true);\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('ConquistaFormController', ConquistaFormController);\n\n    function ConquistaFormController($scope, toaster, envService, Upload, Conquista, Tarefa) {\n        var vm = this;\n\n        if (typeof $scope.ngDialogData.conquista != 'undefined') {\n            vm.conquista = angular.copy($scope.ngDialogData.conquista);\n        } else {\n            vm.conquista = {};\n        }\n\n        vm.imagem = null;\n        vm.tarefas = {};\n        vm.tempoOptions = [\n            'No mesmo dia',\n            'Na mesma semana',\n            'No mesmo mês',\n            'Tempo indeterminado'\n        ];\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Conquista.get(vm.conquista.id).then(function(conquista) {\n                vm.conquista = conquista;\n                vm.loading = false;\n            });\n        };\n\n        if (vm.conquista.id) {\n            vm.load();\n        }\n\n        vm.loadTarefas = function() {\n            Tarefa.getList().then(function(response) {\n                vm.tarefas = response.data;\n            });\n        };\n\n        vm.loadTarefas();\n\n        /**\n         * Salva a conquista\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            if (vm.conquista.icone) {\n                if (vm.imagem === null) {\n                    Conquista.save(vm.conquista, vm.conquista.id || null).then(function() {\n                        toaster.pop('success', 'Sucesso!', 'Conquista salva com sucesso!');\n                        $scope.closeThisDialog(true);\n                    });\n                } else {\n                    Upload.upload({\n                        url: envService.read('apiUrl') + '/gamification/upload',\n                        headers: { Authorization: 'Bearer '+ localStorage.getItem('satellizer_token') },\n                        data: {\n                            arquivo: Upload.dataUrltoBlob(vm.conquista.icone, vm.imagem.name)\n                        }\n                    }).success(function(response) {\n                        toaster.pop('success', 'Upload concluído', response.data.msg);\n                        vm.conquista.icone = response.data;\n\n                        Conquista.save(vm.conquista, vm.conquista.id || null).then(function() {\n                            toaster.pop('success', 'Sucesso!', 'Conquista salva com sucesso!');\n                            $scope.closeThisDialog(true);\n                        });\n                    }).error(function () {\n                        toaster.pop('error', \"Erro no upload!\", \"Erro ao enviar arquivos, tente novamente!\");\n                    });\n                }\n            } else {\n                toaster.pop('error', \"Erro no upload!\", \"Tem certeza que você selecionou uma imagem?\");\n            }\n        };\n\n        /**\n         * Exclui a conquista\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            Conquista.delete(vm.conquista.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Conquista excluida com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('ConquistaListController', ConquistaListController);\n\n    function ConquistaListController(ngDialog, Filter, TableHeader, Conquista) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('conquistas', vm, {\n            'gamification_conquistas.titulo': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('gamification_conquistas', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Conquista.getList({\n                fields:   ['gamification_conquistas.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário de conquistas\n         *\n         * @return {void}\n         */\n        vm.openForm = function(conquista) {\n            ngDialog.open({\n                template: 'views/gamification/conquistas/form.html',\n                controller: 'ConquistaFormController',\n                controllerAs: 'ConquistaForm',\n                data: {\n                    conquista: conquista || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RecompensaFormController', RecompensaFormController);\n\n    function RecompensaFormController($scope, toaster, Recompensa) {\n        var vm = this;\n\n        if (typeof $scope.ngDialogData.recompensa != 'undefined') {\n            vm.recompensa = angular.copy($scope.ngDialogData.recompensa);\n        } else {\n            vm.recompensa = {};\n        }\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Recompensa.get(vm.recompensa.id).then(function(recompensa) {\n                vm.recompensa = recompensa;\n                vm.loading = false;\n            });\n        };\n\n        if (vm.recompensa.id) {\n            vm.load();\n        }\n\n        /**\n         * Salva a recompensa\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            Recompensa.save(vm.recompensa, vm.recompensa.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Recompensa salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n\n        /**\n         * Exclui a recompensa\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            Recompensa.delete(vm.recompensa.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Recompensa excluida com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RecompensaListController', RecompensaListController);\n\n    function RecompensaListController(ngDialog, Filter, TableHeader, Recompensa) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('gamification_recompensas', vm, {\n            'gamification_recompensas.titulo': 'LIKE',\n            'gamification_recompensas.valor': '>=',\n            'gamification_recompensas.nivel': '>='\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('gamification_recompensas', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Recompensa.getList({\n                fields:   ['gamification_recompensas.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário de recompensas\n         *\n         * @return {void}\n         */\n        vm.openForm = function(recompensa) {\n            ngDialog.open({\n                template: 'views/gamification/recompensas/form.html',\n                controller: 'RecompensaFormController',\n                controllerAs: 'RecompensaForm',\n                data: {\n                    recompensa: recompensa || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('TarefaFormController', TarefaFormController);\n\n    function TarefaFormController($scope, toaster, Tarefa) {\n        var vm = this;\n\n        if (typeof $scope.ngDialogData.tarefa != 'undefined') {\n            vm.tarefa = angular.copy($scope.ngDialogData.tarefa);\n        } else {\n            vm.tarefa = {};\n        }\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Tarefa.get(vm.tarefa.id).then(function(tarefa) {\n                vm.tarefa = tarefa;\n                vm.loading = false;\n            });\n        };\n\n        if (vm.tarefa.id) {\n            vm.load();\n        }\n\n        /**\n         * Salva a tarefa\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            Tarefa.save(vm.tarefa, vm.tarefa.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Tarefa salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n\n        /**\n         * Exclui a tarefa\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            Tarefa.delete(vm.tarefa.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Tarefa excluida com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('TarefaListController', TarefaListController);\n\n    function TarefaListController(ngDialog, Filter, TableHeader, Tarefa) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('tarefas', vm, {\n            'gamification_tarefas.titulo': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('gamification_tarefas', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Tarefa.getList({\n                fields:   ['gamification_tarefas.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário de tarefas\n         *\n         * @return {void}\n         */\n        vm.openForm = function(tarefa) {\n            ngDialog.open({\n                template: 'views/gamification/tarefas/form.html',\n                controller: 'TarefaFormController',\n                controllerAs: 'TarefaForm',\n                data: {\n                    tarefa: tarefa || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('TrocaFormController', TrocaFormController);\n\n    function TrocaFormController($scope, toaster, Troca, Recompensa, Gamification) {\n        var vm = this;\n\n        if (typeof $scope.ngDialogData.troca != 'undefined') {\n            vm.troca = angular.copy($scope.ngDialogData.troca);\n        } else {\n            vm.troca = {\n                recompensa: false\n            };\n        }\n\n        vm.imagem = null;\n        vm.recompensas = {};\n        vm.perfil = {};\n\n        vm.load = function() {\n            vm.loading = true;\n\n            if (vm.troca.id) {\n                Troca.get(vm.troca.id).then(function(troca) {\n                    vm.troca = troca;\n                    vm.loading = false;\n                });\n            }\n\n            Gamification.get().then(function(perfil) {\n                vm.perfil = perfil;\n                vm.loading = false;\n            });\n        };\n\n        vm.load();\n\n        vm.loadRecompensas = function() {\n            Recompensa.getList().then(function(response) {\n                vm.recompensas = response.data;\n            });\n        };\n\n        vm.loadRecompensas();\n\n        vm.setRecompensa = function(recompensa) {\n            if (recompensa != false) {\n                if (recompensa.valor > vm.perfil.moedas && recompensa.nivel > vm.perfil.nivel) {\n                    toaster.pop('warning', 'Nível e moedas insuficientes', 'Você ainda não pode receber estas recompensas :\\\\');\n                } else if (recompensa.valor > vm.perfil.moedas) {\n                    toaster.pop('warning', 'Moedas insuficientes', 'Você ainda não tem as moedas necessárias :\\\\');\n                } else if (recompensa.nivel > vm.perfil.nivel) {\n                    toaster.pop('warning', 'Nível insuficiente', 'Você ainda não está no nível necessário :\\\\');\n                } else {\n                    vm.troca.recompensa = recompensa;\n                }\n            } else {\n                vm.troca.recompensa = recompensa;\n            }\n        };\n\n        /**\n         * Salva a troca\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            Troca.save(vm.troca, vm.troca.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Troca salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('TrocaListController', TrocaListController);\n\n    function TrocaListController(toaster, ngDialog, Filter, TableHeader, Troca) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('gamification_trocas', vm, {\n            'usuarios.name': 'LIKE',\n            'gamification_recompensas.titulo': 'LIKE',\n            'gamification_trocas.valor': '>=',\n            'gamification_trocas.status': '=',\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('gamification_trocas', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Troca.getList({\n                fields:   ['gamification_trocas.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário de trocas\n         *\n         * @return {void}\n         */\n        vm.openForm = function(troca) {\n            ngDialog.open({\n                template: 'views/gamification/trocas/form.html',\n                controller: 'TrocaFormController',\n                controllerAs: 'TrocaForm',\n                data: {\n                    troca: troca || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n\n        vm.aprove = function(troca) {\n            troca.status = 1;\n\n            Troca.save(troca, troca.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Troca aprovada com sucesso!');\n                vm.load();\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('EditarController', EditarController);\n\n    function EditarController(Restangular, $rootScope, $scope, toaster, ValidationErrors, Rastreio) {\n        var vm = this;\n\n        vm.validationErrors = [];\n\n        if (typeof $scope.ngDialogData.rastreio != 'undefined') {\n            vm.rastreio = $scope.ngDialogData.rastreio;\n        } else {\n            vm.rastreio = {};\n        }\n\n        /**\n         * Save the observation\n         */\n        vm.save = function() {\n            vm.validationErrors = [];\n\n            Rastreio.save(vm.rastreio, vm.rastreio.id || null).then(\n                function() {\n                    $scope.closeThisDialog(true);\n                    toaster.pop('success', 'Sucesso!', 'Pedido editado com sucesso!');\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n    }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RastreioImportanteListController', RastreioImportanteListController);\n\n    function RastreioImportanteListController(Rastreio, Filter, TableHeader, toaster) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('rastreios', vm, {\n            'pedidos.codigo_marketplace': 'LIKE',\n            'clientes.nome':              'LIKE',\n            'pedido_rastreios.rastreio':  'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('rastreios', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Rastreio.important({\n                fields:   ['pedido_rastreios.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('LinhaFormController', LinhaFormController);\n\n    function LinhaFormController($rootScope, $state, $stateParams, Restangular, Linha, toaster, ngDialog) {\n        var vm = this;\n\n        vm.linha = {\n            id: $stateParams.id || null,\n            atributos: [],\n            removidos: {\n                atributos: [],\n                opcoes: []\n            }\n        };\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Linha.get(vm.linha.id).then(function(linha) {\n                vm.linha = linha;\n                vm.loading = false;\n\n                vm.linha.removidos = {\n                    atributos: [],\n                    opcoes: []\n                };\n            });\n        };\n\n        if (vm.linha.id) {\n            vm.load();\n        }\n\n        /**\n         * Adiciona um atributo\n         *\n         * @return {void}\n         */\n        vm.addAttribute = function() {\n            vm.linha.atributos.unshift({});\n        };\n\n        /**\n         * Remove um atributo\n         *\n         * @return {void}\n         */\n        vm.removeAttribute = function(index) {\n            vm.linha.removidos.atributos.push(\n                vm.linha.atributos[index].id\n            );\n\n            vm.linha.atributos.splice(index, 1);\n        };\n\n        /**\n         * Quando uma tag é removida\n         *\n         * @return {void}\n         */\n        vm.removeTag = function(tag) {\n            vm.linha.removidos.opcoes.push(tag.id);\n        };\n\n        /**\n         * Quando di que a tag é invalda\n         * Checa e entao adiciona\n         *\n         * @return {void}\n         */\n        vm.checkTag = function(tag, index) {\n            if (tag) {\n                tag.id = null;\n                vm.linha.atributos[index].opcoes.push(tag);\n            }\n        };\n\n        /**\n         * Salva a linha\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            Linha.save(vm.linha, vm.linha.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Linha salva com sucesso!');\n                $state.go('app.produtos.linhas.index');\n            });\n        };\n\n        /**\n         * Exclui a linha\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            Linha.delete(vm.linha.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Linha excluida com sucesso!');\n                $state.go('app.produtos.linhas.index');\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('LinhaListController', LinhaListController);\n\n    function LinhaListController(Linha, Filter, TableHeader, ngDialog) {\n        var vm = this;  \n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('linhas', vm, {\n            'linhas.titulo': 'LIKE'\n        });\n \n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader} \n         */\n        vm.tableHeader = TableHeader.init('linhas', vm);\n\n        vm.load = function() {\n            vm.loading = true; \n \n            Linha.getList({\n                fields:   ['linhas.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false; \n            });\n        };\n        vm.load();\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('MarcaFormController', MarcaFormController);\n\n    function MarcaFormController($rootScope, $scope, $state, $stateParams, Marca, toaster) {\n        var vm = this;\n\n        if (typeof $scope.ngDialogData.marca != 'undefined') {\n            vm.marca = angular.copy($scope.ngDialogData.marca);\n        } else {\n            vm.marca = {};\n        }\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Marca.get(vm.marca.id).then(function(marca) {\n                vm.marca   = marca;\n                vm.loading = false;\n            });\n        };\n\n        if (vm.marca.id) {\n            vm.load();\n        }\n\n        /**\n         * Salva a marca\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            Marca.save(vm.marca, vm.marca.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Marca salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n\n        /**\n         * Exclui a marca\n         *\n         * @return {void}\n         */\n        vm.destroy = function() {\n            Marca.delete(vm.marca.id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Marca excluida com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('MarcaListController', MarcaListController);\n\n    function MarcaListController(Marca, Filter, TableHeader, ngDialog) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('marcas', vm, {\n            'marcas.titulo': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('marcas', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Marca.getList({\n                fields:   ['marcas.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário da amrca\n         *\n         * @return {void}\n         */\n        vm.openForm = function(marca) {\n            ngDialog.open({\n                template: 'views/produto/marca/form.html',\n                controller: 'MarcaFormController',\n                controllerAs: 'MarcaForm',\n                data: {\n                    marca: marca || {}\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n    }\n})();","\n(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('MinhaSenhaController', MinhaSenhaController);\n\n    function MinhaSenhaController($rootScope, Restangular, ngDialog, toaster, Senha, TableHeader) {\n        var vm = this;\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('senhas', vm);\n\n        vm.load = function() {\n            ngDialog.open({\n                template: 'views/usuario/senha/form_senha.html'\n            }).closePromise.then(function(data) {\n                if (data.value !== null) {\n                    vm.loading = true;\n\n                    Restangular.one('check-password', $rootScope.currentUser.id).customPOST({ 'password': data.value }).then(function(response) {\n                        vm.loading = false;\n\n                        if (response === true) {\n                            vm.loading = true;\n\n                            Senha.fromUser(null, {\n                                page:     vm.tableHeader.pagination.page,\n                                per_page: vm.tableHeader.pagination.per_page,\n                            }).then(function(response) {\n                                vm.tableData = response;\n                                vm.loading = false;\n                            });\n                        } else {\n                            vm.tableData = {};\n                            toaster.pop('error', 'Senhas não conferem!', 'Você não poderá visualizar essas informações!');\n                        }\n                    });\n                }\n            });\n        };\n\n        vm.load();\n\n        /**\n         * Esconde / mostra a senha\n         * @param  {int} index indice da senha\n         * @return {void}\n         */\n        vm.toglePassword = function(index) {\n            if (vm.tableData.data[index].inputType == 'text') {\n                vm.tableData.data[index].inputType = 'password';\n            } else {\n                vm.tableData.data[index].inputType = 'text';\n            }\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SenhaFormController', SenhaFormController);\n\n    function SenhaFormController(Senha, $scope, toaster) {\n        var vm = this;\n\n        vm.senha = angular.copy($scope.ngDialogData.senha);\n\n        /**\n         * Salva as informações da senha\n         * \n         * @return {void} \n         */\n        vm.save = function() {\n            Senha.save(vm.senha, vm.senha.id || null).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Senha salva com sucesso!');\n                $scope.closeThisDialog(true);\n            });\n        };\n    }\n\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('SenhaListController', SenhaListController);\n\n    function SenhaListController(Senha, TableHeader, $stateParams, Restangular, ngDialog, toaster) {\n        var vm = this;\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('senhas', vm);\n\n        vm.load = function() {\n            vm.loading = true;\n\n            Senha.fromUser($stateParams.id, {\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page,\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n\n        /**\n         * Abre o formulário de senha\n         *\n         * @return {void}\n         */\n        vm.openForm = function(senha) {\n            ngDialog.open({\n                template: 'views/usuario/senha/form.html',\n                controller: 'SenhaFormController',\n                controllerAs: 'SenhaForm',\n                data: {\n                    senha: senha || { usuario_id: $stateParams.id }\n                }\n            }).closePromise.then(function(data) {\n                if (data.value === true) vm.load();\n            });\n        };\n\n        /**\n         * Remove a senha\n         *\n         * @param  {int} senha\n         * @return {void}\n         */\n        vm.destroy = function(id) {\n            Senha.delete(id).then(function() {\n                toaster.pop('success', 'Sucesso!', 'Senha deletada com sucesso!');\n                vm.load();\n            });\n        };\n\n        /**\n         * Esconde / mostra a senha\n         * @param  {int} index indice da senha\n         * @return {void}\n         */\n        vm.toglePassword = function(index) {\n            if (vm.tableData.data[index].inputType == 'text') {\n                vm.tableData.data[index].inputType = 'password';\n            } else {\n                vm.tableData.data[index].inputType = 'text';\n            }\n        };\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('PedidoProduto', PedidoProdutoModel);\n\n        function PedidoProdutoModel(Rest, Restangular) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'pedido-produto';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Devolucao', Devolucao);\n\n        function Devolucao(envService, Upload, Rest, Restangular) {\n            var rest   = angular.copy(Rest);\n            rest.baseUrl  = 'devolucoes';\n\n            angular.extend(rest, {\n                /**\n                 * Retorna as Devolucaoes pendentes de resposta\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                pending: function(params) {\n                    params = this.parseParams(params);\n\n                    return Restangular.all('devolucoes/pending').customGET(\"\", params || {});\n                },\n\n                /**\n                 * Cria um novo registro do recurso\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                create: function(params) {\n                    return Upload.upload({\n                        url: envService.read('apiUrl') + '/' + this.baseUrl,\n                        method: 'POST',\n                        headers: { Authorization: 'Bearer '+ localStorage.getItem('satellizer_token') },\n                        data: params\n                    });\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Logistica', LogisticaModel);\n\n        function LogisticaModel(envService, Upload, Rest, Restangular) {\n            var rest     = angular.copy(Rest);\n            rest.baseUrl = 'logisticas';\n\n            angular.extend(rest, {\n\n                /**\n                 * Cria um novo registro do recurso\n                 *\n                 * @param  {Object} params\n                 * @return {Object}\n                 */\n                create: function(params) {\n                    return Upload.upload({\n                        url: envService.read('apiUrl') + '/' + this.baseUrl,\n                        method: 'POST',\n                        headers: { Authorization: 'Bearer '+ localStorage.getItem('satellizer_token') },\n                        data: params\n                    });\n                }\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Monitorado', MonitoradoModel);\n\n        function MonitoradoModel(Rest, Restangular) {\n            var rest   = angular.copy(Rest);\n            rest.baseUrl  = 'rastreio/monitorados';\n\n            angular.extend(rest, {\n\n                /**\n                 * Retorna uma lista simples com os rastreios monitorados\n                 *\n                 * @return {Object}\n                 */\n                simpleList: function() {\n                    return Restangular.all(this.baseUrl + '/simple-list').customGET();\n                },\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano') \n        .service('Pi', PiModel);\n\n        function PiModel(Rest, Restangular) {\n            var rest   = angular.copy(Rest);\n            rest.baseUrl  = 'pis';\n\n            angular.extend(rest, {\n\n                /**\n                 * Retorna as PI's pendentes de resposta\n                 * \n                 * @param  {Object} params \n                 * @return {Object}        \n                 */\n                pending: function(params) {\n                    params = this.parseParams(params);\n                    \n                    return Restangular.all('pis/pending').customGET(\"\", params || {});\n                },\n            });\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .service('Linha', LinhaModel); \n\n        function LinhaModel(Rest) {\n            var rest = angular.copy(Rest);\n            rest.baseUrl = 'linhas';\n\n            return rest;\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('DevolucaoFormController', DevolucaoFormController);\n\n    function DevolucaoFormController($scope, toaster, ValidationErrors, Devolucao) {\n        var vm = this;\n\n        vm.validationErrors = [];\n\n        vm.devolucaoOriginal = angular.copy($scope.ngDialogData.devolucao, vm.devolucaoOriginal);\n        vm.devolucao = $scope.ngDialogData.devolucao;\n\n        /**\n         * Save the observation\n         */\n        vm.save = function() {\n            vm.validationErrors = [];\n\n            Devolucao.save(vm.devolucao, vm.devolucao.id || null).then(\n                function() {\n                    toaster.pop('success', 'Sucesso!', 'Devolução criada com sucesso!');\n                    $scope.closeThisDialog(true);\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('DevolucaoPendenteListController', DevolucaoPendenteListController);\n\n    function DevolucaoPendenteListController(Filter, TableHeader, Devolucao, RastreioHelper, toaster) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('devolucoes', vm, {\n            'clientes.nome':                               'LIKE',\n            'pedido_rastreios.rastreio':                   'LIKE',\n            'pedido_rastreio_devolucoes.codigo_devolucao': 'LIKE',\n            'pedidos.id':                                  'LIKE',\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('devolucoes', vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.rastreioHelper = RastreioHelper.init(vm);\n\n        /**\n         * Load rastreios\n         */\n        vm.load = function() {\n            vm.loading = true;\n\n            Devolucao.pending({\n                fields:   ['pedido_rastreio_devolucoes.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('LogisticaFormController', LogisticaFormController);\n\n    function LogisticaFormController($scope, toaster, ValidationErrors, Logistica) {\n        var vm = this;\n\n        vm.validationErrors = [];\n\n        vm.logisticaOriginal = angular.copy($scope.ngDialogData.logistica, vm.logisticaOriginal);\n        vm.logistica = $scope.ngDialogData.logistica;\n\n        /**\n         * Save the observation\n         */\n        vm.save = function() {\n            vm.validationErrors = [];\n\n            Logistica.save(vm.logistica, vm.logistica.id || null).then(\n                function() {\n                    $scope.closeThisDialog(true);\n                    toaster.pop('success', 'Sucesso!', 'Logistica reversa salva com sucesso!');\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('RastreioMonitoradoListController', RastreioMonitoradoListController);\n\n    function RastreioMonitoradoListController(Filter, TableHeader, RastreioHelper, Monitorado) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('rastreios_monitorados', vm, {\n                'pedidos.codigo_marketplace':  'LIKE',\n                'clientes.nome':                        'LIKE',\n                'pedido_rastreios.rastreio':        'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('rastreios_monitorados', vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.rastreioHelper = RastreioHelper.init(vm);\n\n        /**\n         * Load rastreios\n         */\n        vm.load = function() {\n            vm.loading = true;\n\n            Monitorado.getList({\n                fields:   ['pedido_rastreio_monitorados.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading = false;\n            });\n        };\n        vm.load();\n    }\n})();","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PiFormController', PiFormController);\n\n    function PiFormController(Pi, $scope, toaster, $window, $httpParamSerializer, ValidationErrors, envService) {\n        var vm = this;\n\n        vm.validationErrors = [];\n\n        vm.pi = $scope.ngDialogData.pi;\n\n        /**\n         * Salva as informações da PI\n         *\n         * @return {void}\n         */\n        vm.save = function() {\n            vm.validationErrors = [];\n\n            Pi.save(vm.pi, vm.pi.id || null).then(\n                function() {\n                    $scope.closeThisDialog(true);\n                    toaster.pop('success', 'Sucesso!', 'Pedido de informação salvo com sucesso!');\n                },\n                function(error) {\n                    vm.validationErrors = ValidationErrors.handle(error);\n                }\n            );\n        };\n\n        /**\n         * Open PI\n         */\n        vm.openPi = function() {\n            var auth = {\n                token: localStorage.getItem(\"satellizer_token\")\n            };\n\n            $window.open(envService.read('apiUrl') + '/rastreios/pi/' + vm.pi.rastreio_id + '?' + $httpParamSerializer(auth));\n        };\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('MeuTucano')\n        .controller('PiPendenteListController', PiPendenteListController);\n\n    function PiPendenteListController(Filter, TableHeader, Pi, ngDialog, toaster, RastreioHelper) {\n        var vm = this;\n\n        /**\n         * Filtros\n         * @type {Filter}\n         */\n        vm.filterList = Filter.init('pis', vm, {\n            'clientes.nome':                 'LIKE',\n            'pedido_rastreios.rastreio':     'LIKE',\n            'pedidos.codigo_marketplace':    'LIKE',\n            'pedido_rastreio_pis.codigo_pi': 'LIKE'\n        });\n\n        /**\n         * Cabeçalho da tabela\n         * @type {TableHeader}\n         */\n        vm.tableHeader = TableHeader.init('pis', vm);\n\n        /**\n         * @type {Object}\n         */\n        vm.rastreioHelper = RastreioHelper.init(vm);\n\n        /**\n         * Load rastreios\n         */\n        vm.load = function() {\n            vm.loading = true;\n\n            Pi.pending({\n                fields:   ['pedido_rastreio_pis.*'],\n                filter:   vm.filterList.parse(),\n                page:     vm.tableHeader.pagination.page,\n                per_page: vm.tableHeader.pagination.per_page\n            }).then(function(response) {\n                vm.tableData = response;\n                vm.loading   = false;\n            });\n        };\n        vm.load();\n    }\n})();"]}